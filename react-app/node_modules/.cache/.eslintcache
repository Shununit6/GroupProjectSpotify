[{"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/index.js":"1","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/session.js":"2","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/context/Modal.js":"3","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/App.js":"4","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/index.js":"5","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/albums.js":"6","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/artists.js":"7","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/playlists.js":"8","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/songs.js":"9","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/likes.js":"10","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/ManageSongs/index.js":"11","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/LoginFormPage/index.js":"12","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/UpdateSong/index.js":"13","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SignupFormPage/index.js":"14","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/ManageAlbums/index.js":"15","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SongIndex/index.js":"16","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/PlaylistIndex/index.js":"17","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/PlaylistDetails/index.js":"18","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Albums/index.js":"19","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/ManagePlaylists/index.js":"20","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/CreateSong/index.js":"21","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AlbumDetails/index.js":"22","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SongDetails/index.js":"23","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/UpdateAlbum/index.js":"24","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/CreateAlbum/index.js":"25","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Navigation/index.js":"26","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Home/index.js":"27","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Navigation/OpenModalMenuItem.js":"28","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AlbumIndexItem/index.js":"29","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SongIndexItem/index.js":"30","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/PlaylistIndexItem/index.js":"31","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SongForm/index.js":"32","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Navigation/ProfileButton.js":"33","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AlbumForm/index.js":"34","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/DeletePlaylistModal/index.js":"35","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AddSongToAlbumModal/index.js":"36","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AddSongToPlaylistModal/index.js":"37","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/RemoveSongFromPlaylistModal/index.js":"38","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/MainPageContent/index.js":"39","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/RemoveSongFromAlbumModal/index.js":"40","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/DeleteSongModal/index.js":"41","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/DeleteAlbumModal/index.js":"42","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/LikeSong/index.js":"43","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/MenuLibrary/index.js":"44","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/LoginFormModal/index.js":"45","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SignupFormModal/index.js":"46","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/UpdatePlaylist/index.js":"47","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/PlaylistForm/index.js":"48"},{"size":995,"mtime":1705168318377,"results":"49","hashOfConfig":"50"},{"size":2089,"mtime":1705168318378,"results":"51","hashOfConfig":"50"},{"size":1851,"mtime":1705168318377,"results":"52","hashOfConfig":"50"},{"size":2730,"mtime":1706379035010,"results":"53","hashOfConfig":"50"},{"size":932,"mtime":1705639626011,"results":"54","hashOfConfig":"50"},{"size":5165,"mtime":1706379035045,"results":"55","hashOfConfig":"50"},{"size":2370,"mtime":1706239339362,"results":"56","hashOfConfig":"50"},{"size":4642,"mtime":1706379035055,"results":"57","hashOfConfig":"50"},{"size":4157,"mtime":1706379035062,"results":"58","hashOfConfig":"50"},{"size":3199,"mtime":1706379035052,"results":"59","hashOfConfig":"50"},{"size":1355,"mtime":1706379035021,"results":"60","hashOfConfig":"50"},{"size":1420,"mtime":1705168318375,"results":"61","hashOfConfig":"50"},{"size":669,"mtime":1705891296795,"results":"62","hashOfConfig":"50"},{"size":2135,"mtime":1705168318376,"results":"63","hashOfConfig":"50"},{"size":1406,"mtime":1706379035019,"results":"64","hashOfConfig":"50"},{"size":972,"mtime":1706379035035,"results":"65","hashOfConfig":"50"},{"size":1031,"mtime":1706379035030,"results":"66","hashOfConfig":"50"},{"size":1681,"mtime":1706379035028,"results":"67","hashOfConfig":"50"},{"size":1114,"mtime":1706379035016,"results":"68","hashOfConfig":"50"},{"size":1499,"mtime":1706379035020,"results":"69","hashOfConfig":"50"},{"size":312,"mtime":1706239339341,"results":"70","hashOfConfig":"50"},{"size":1647,"mtime":1706379035013,"results":"71","hashOfConfig":"50"},{"size":4011,"mtime":1706379035032,"results":"72","hashOfConfig":"50"},{"size":682,"mtime":1706239339355,"results":"73","hashOfConfig":"50"},{"size":268,"mtime":1706239339340,"results":"74","hashOfConfig":"50"},{"size":707,"mtime":1706239339348,"results":"75","hashOfConfig":"50"},{"size":601,"mtime":1706379035018,"results":"76","hashOfConfig":"50"},{"size":918,"mtime":1705891296791,"results":"77","hashOfConfig":"50"},{"size":881,"mtime":1705987007179,"results":"78","hashOfConfig":"50"},{"size":1108,"mtime":1706379035035,"results":"79","hashOfConfig":"50"},{"size":1343,"mtime":1705987007189,"results":"80","hashOfConfig":"50"},{"size":5815,"mtime":1706390721452,"results":"81","hashOfConfig":"50"},{"size":2604,"mtime":1706239339347,"results":"82","hashOfConfig":"50"},{"size":3364,"mtime":1706379035014,"results":"83","hashOfConfig":"50"},{"size":1193,"mtime":1705891265650,"results":"84","hashOfConfig":"50"},{"size":0,"mtime":1706379035011,"results":"85","hashOfConfig":"50"},{"size":1704,"mtime":1706379035012,"results":"86","hashOfConfig":"50"},{"size":1973,"mtime":1706379035031,"results":"87","hashOfConfig":"50"},{"size":1026,"mtime":1706239339344,"results":"88","hashOfConfig":"50"},{"size":1841,"mtime":1706377267111,"results":"89","hashOfConfig":"50"},{"size":1474,"mtime":1706239339342,"results":"90","hashOfConfig":"50"},{"size":1485,"mtime":1706239339342,"results":"91","hashOfConfig":"50"},{"size":1982,"mtime":1706379035019,"results":"92","hashOfConfig":"50"},{"size":1765,"mtime":1706379035026,"results":"93","hashOfConfig":"50"},{"size":1569,"mtime":1705891296789,"results":"94","hashOfConfig":"50"},{"size":1842,"mtime":1705168318376,"results":"95","hashOfConfig":"50"},{"size":745,"mtime":1706379035036,"results":"96","hashOfConfig":"50"},{"size":3934,"mtime":1706379035029,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vnnkrk",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/session.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/context/Modal.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/App.js",["218"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport LoginFormPage from \"./components/LoginFormPage\";\nimport { authenticate } from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\nimport CreateSong from './components/CreateSong';\nimport UpdateSong from './components/UpdateSong';\nimport ManageSongs from './components/ManageSongs';\nimport ManageAlbums from './components/ManageAlbums';\nimport ManagePlaylists from './components/ManagePlaylists';\nimport SongIndex from './components/SongIndex';\nimport SongDetails from './components/SongDetails';\nimport Albums from \"./components/Albums\";\nimport AlbumDetails from \"./components/AlbumDetails\";\nimport UpdateAlbum from \"./components/UpdateAlbum\"\nimport CreateAlbum from \"./components/CreateAlbum\";\nimport PlaylistIndex from './components/PlaylistIndex';\nimport PlaylistDetails from './components/PlaylistDetails';\nimport Home from './components/Home';\n// import LikeSong from \"./components/LikeSong\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(authenticate()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <Home />\n          </Route>\n\n          <Route path=\"/albums\" exact={true}>\n            <Albums/>\n          </Route>\n          <Route path=\"/albums/:albumId(\\d+)\" exact={true}>\n            <AlbumDetails/>\n          </Route>\n          <Route path=\"/albums/:albumId/edit\" exact={true}>\n            <UpdateAlbum/>\n          </Route>\n          <Route exact path=\"/albums/new\" component={CreateAlbum}/>\n          <Route exact path=\"/songs/current\" component={ManageSongs}/>\n          <Route exact path=\"/songs/new\" component={CreateSong}/>\n          <Route exact path=\"/songs/:songId(\\d+)/edit\" component={UpdateSong}/>\n          {/* <Route exact path=\"/songs/:songId(\\d+)/likes\" component={LikeSong}/> */}\n          <Route exact path=\"/songs/:songId(\\d+)\" component={SongDetails}/>\n          <Route exact path=\"/songs\" component={SongIndex}/>\n          <Route exact path=\"/playlists/current\" component={ManagePlaylists}/>\n          <Route exact path=\"/playlists/:playlistId(\\d+)\" component={PlaylistDetails}/>\n          <Route exact path=\"/playlists\" component={PlaylistIndex}/>\n          <Route path=\"/login\" ><LoginFormPage /></Route>\n          <Route path=\"/signup\"><SignupFormPage /></Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/albums.js",["219"],"// /** Action Type Constants: */\nexport const LOAD_ALBUMS = \"albums/LOAD_ALBUMS\";\nexport const LOAD_ALBUM_DETAILS = \"albums/LOAD_ALBUM_DETAILS\";\nexport const RECEIVE_ALBUM = \"albums/RECEIVE_ALBUM\";\nexport const UPDATE_ALBUM = \"albums/UPDATE_ALBUM\";\nexport const REMOVE_ALBUM = \"albums/REMOVE_ALBUM\";\nexport const RECEIVE_ALBUM_SONG = \"albums/RECEIVE_ALBUM_SONG\";\nexport const REMOVE_ALBUM_SONG = \"albums/REMOVE_ALBUM_SONG\";\n\n// /**  Action Creators: */\nexport const loadAlbums = (albums) => ({\n    type: LOAD_ALBUMS,\n    albums,\n});\n\nexport const loadAlbumDetails = (album) => ({\n    type: LOAD_ALBUM_DETAILS,\n    album,\n});\n\nexport const receiveAlbum = (album) => ({\n    type: RECEIVE_ALBUM,\n    album,\n});\n\nexport const editAlbum = (album) => ({\n    type: UPDATE_ALBUM,\n    album,\n});\n\nexport const removeAlbum = (album) => ({\n    type: REMOVE_ALBUM,\n    album,\n});\n\nexport const receiveAlbumSong = (albumSong) => ({\n    type: RECEIVE_ALBUM_SONG,\n    albumSong,\n});\n\nexport const removeAlbumSong = (albumId, songId) => ({\n    type: REMOVE_ALBUM_SONG,\n    albumId,\n    songId,\n});\n\n// /** Thunk Action Creators: */\nexport const getAllAlbums = () => async (dispatch) => {\n    const res = await fetch(`/api/albums`);\n\n    if (res.ok) {\n        const data = await res.json();\n        // console.log(\"data\", data);\n        dispatch(loadAlbums(data));\n        return data;\n    }\n    return res;\n};\n\nexport const getAlbumDetails = (albumId) => async dispatch => {\n    console.log(\"Fetching album details for albumId:\", albumId);\n    const res = await fetch(`/api/albums/${albumId}`);\n\n    if (res.ok) {\n        const data = await res.json();\n        console.log(\"Received data:\", data);\n        dispatch(loadAlbumDetails(data));\n        return data;\n    }\n    console.log(\"Error fetching album details:\", res.statusText);\n    return res;\n};\n\nexport const getMyAlbums = () => async (dispatch) => {\n    const res = await fetch('/api/albums/current');\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(loadAlbums(data));\n        return data;\n    }\n    return res;\n};\n\nexport const createAlbum = (payload) => async (dispatch) => {\n    console.log(\"We are here\")\n    console.log(\"this is the payload:\", payload)\n    const res = await fetch(\"/api/albums/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n    });\n    console.log(\"We are here 2\")\n    console.log(\"This is the res\", res)\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(receiveAlbum(data));\n        return data;\n    }\n    return res;\n};\n\nexport const updateAlbum = (album) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${album.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(album),\n    });\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(editAlbum(data));\n        return data;\n    }\n    return res;\n};\n\nexport const deleteAlbum = (albumId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}`, {\n        method: \"DELETE\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(removeAlbum(albumId));\n        return data;\n    }\n    return res;\n};\n\nexport const createAlbumSong = (albumSong, albumId, songId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}/songs/${songId}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(albumSong),\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(receiveAlbumSong(data));\n        return data;\n    }\n    return res;\n};\n\nexport const deleteAlbumSong = (albumId, songId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}/songs/${songId}`, {\n        method: \"DELETE\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        await dispatch(removeAlbumSong(albumId, songId));\n        return data;\n    }\n    return res;\n};\n\nconst albumsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case LOAD_ALBUMS: {\n            const albumsState = { ...state };\n            action.albums.albums.forEach((album) => {\n                if (!albumsState[album.id]) { albumsState[album.id] = album; }\n            });\n            return albumsState;\n        };\n        case LOAD_ALBUM_DETAILS: {\n            return { ...state, [action.album.id]: action.album };\n        };\n        case RECEIVE_ALBUM:\n            return { ...state, [action.album.id]: action.album };\n        case UPDATE_ALBUM:\n            return { ...state };\n        case REMOVE_ALBUM: {\n            const albumState = { ...state };\n            delete albumState[action.albums];\n            return albumState;\n        };\n        case RECEIVE_ALBUM_SONG: {\n            const albumState = { ...state };\n            return albumState;\n        };\n        case REMOVE_ALBUM_SONG: {\n            const albumState = { ...state };\n            return albumState;\n        };\n        default:\n            return state;\n    }\n};\n\nexport default albumsReducer;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/artists.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/playlists.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/songs.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/store/likes.js",["220"],"// /** Action Type Constants: */\nexport const LOAD_LIKES = \"likes/LOAD_LIKES\";\nexport const LOAD_SONG_LIKES = \"likes/LOAD_SONG_LIKES\";\nexport const RECEIVE_LIKE = \"likes/RECEIVE_LIKE\";\nexport const REMOVE_LIKE = \"likes/REMOVE_LIKE\";\n\n// /**  Action Creators: */\nexport const loadLikes = (likes) => ({\n    type: LOAD_LIKES,\n    likes,\n});\n\nexport const loadSongLikes = (likes) => ({\n    type: LOAD_SONG_LIKES,\n    likes,\n});\n\nexport const receiveLike = (like) => ({\n    type: RECEIVE_LIKE,\n    like,\n});\n\nexport const removeLike = (like) => ({\n    type: REMOVE_LIKE,\n    like,\n});\n\n// /** Thunk Action Creators: */\nexport const getAllLikes = () => async (dispatch) => {\n    const res = await fetch(`/api/songs/likes`);\n\n    if (res.ok) {\n        const data = await res.json();\n        console.log(\"data\", data);\n        dispatch(loadLikes(data));\n        return data;\n    }\n    return res;\n};\n\nexport const getSongLikes = (songId) => async (dispatch) => {\n    const res = await fetch(`/api/songs/${songId}/likes`);\n\n    if (res.ok) {\n        const data = await res.json();\n        console.log(\"likedata\", data);\n        dispatch(loadSongLikes(data));\n        return data;\n    }\n    return res;\n};\n\n\nexport const createLike = (payload, songId) => async (dispatch) => {\n    const res = await fetch(`/api/songs/${songId}/likes`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n    });\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(receiveLike(data));\n        return data;\n    }\n    return res;\n};\n\nexport const deleteLike = (likeId, songId) => async (dispatch) => {\n    const res = await fetch(`/api/songs/${songId}/likes`, {\n        method: \"DELETE\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        console.log(\"likeIddletelike\", likeId)\n        dispatch(removeLike(likeId));\n        return data;\n    }\n    return res;\n};\n\nconst likesReducer = (state = { }, action) => {\n    switch (action.type) {\n        case LOAD_LIKES:\n            // console.log(\"actionloadlikes\", action.likes)\n            // return {...state, ...action.likes}\n            const likesState = {...state};\n            console.log(action)\n            action.likes.likes.forEach((like) => {\n                if(!likesState[like.id]) {likesState[like.id] = like;}\n            });\n            return {...likesState};\n        case LOAD_SONG_LIKES:{\n            return { ...state, ...action.likes };\n        };\n        case RECEIVE_LIKE:\n            console.log(\"actionhereisthe\", action)\n            console.log(\"actionhereisthe\", action.like.id)\n            console.log(\"state\", {...state})\n            return { ...state, [action.like.id]: action.like };\n        case REMOVE_LIKE:{\n            console.log(\"deleteaction\", action)\n            console.log(\"deleteactionhereisthe\", action)\n            // console.log(\"deleteactionhereisthe\", action.like.id)\n            const likeState = { ...state };\n            console.log(\"state\", likeState)\n            delete likeState[action.likes];\n            return likeState;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default likesReducer;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/ManageSongs/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/LoginFormPage/index.js",[],["221","222"],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/UpdateSong/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SignupFormPage/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/ManageAlbums/index.js",["223"],"import './ManageAlbums.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMyAlbums } from '../../store/albums';\nimport AlbumIndexItem from '../AlbumIndexItem/index';\n\nconst ManageAlbums = () => {\n    const dispatch = useDispatch();\n    const albums = useSelector(state => Object.values(state.albumsReducer));\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        dispatch(getMyAlbums()).then(() => setIsLoading(false));\n    }, [dispatch]);\n    const sessionUser = useSelector(state => state.session.user);\n    if (isLoading) return (<>Loading...</>);\n    const albumsByUser = albums ? albums.filter(album => album.user_id === sessionUser.id) : [];\n    const hasAlbums = albumsByUser.length > 0;\n    return (\n        <div>\n            <p className='title'>Manage Albums</p>\n            {/* {!hasAlbums && <Link to={'/albums/new'}><button className='createAlbumButton'>Create a New Album</button></Link>} */}\n            {hasAlbums && <ul className='manageAlbumIndex'>\n                {albumsByUser.map((album) => (\n                    <li className='manageEachAlbum' key={String(album.id)}>\n                        <AlbumIndexItem album={album}/>\n                    </li>\n                ))}\n             </ul>}\n        </div>\n    );\n};\n\nexport default ManageAlbums;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SongIndex/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/PlaylistIndex/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/PlaylistDetails/index.js",["224","225","226","227","228","229"],"import './PlaylistDetails.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPlaylistById } from '../../store/playlists';\nimport DeletePlaylistModal from '../DeletePlaylistModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\n\n\nconst PlaylistDetails = () => {\n  const dispatch = useDispatch();\n  const { playlistId } = useParams();\n  const sessionUser = useSelector(state => state.session.user);\n  const playlist = useSelector(state => state.playlistsReducer.currentPlaylist);\n  console.log(\"this is currentplaylist:\", playlist)\n  const [isLoading, setIsLoading] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n  useEffect(() => {\n    dispatch(fetchPlaylistById(playlistId)).then(() => setIsLoading(false));\n  }, [dispatch, playlistId]);\n\n  const closeMenu = (e) => {\n    if (!ulRef.current?.contains(e.target)) {\n      setShowMenu(false);\n    }\n  };\n\n  if (isLoading || !playlist) return (<>Loading...</>);\n  const {user_id, artist_id, title, lyrics, url, duration, release_date, songs} = playlist;\n  return (\n    <>\n    <div className='grid-container'>\n      <p className='title'>{title}</p>\n      <p className='lyrics'>{lyrics}</p>\n      <p className='duration'>{duration}</p>\n      <p className='release_date'>{release_date}</p>\n    </div>\n    <button>\n        <OpenModalMenuItem\n          itemText=\"Delete\"\n          onItemClick={closeMenu}\n          modalComponent={<DeletePlaylistModal playlist={playlist}/>}\n        />\n      </button>\n    </>\n  )\n};\n\nexport default PlaylistDetails;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Albums/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/ManagePlaylists/index.js",["230"],"import './ManagePlaylists.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMyPlaylists } from '../../store/playlists';\nimport PlaylistIndexItem from '../PlaylistIndexItem/index';\n\nconst ManagePlaylists = () => {\n    const dispatch = useDispatch();\n    const playlists = useSelector(state => Object.values(state.playlistsReducer));\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        dispatch(getMyPlaylists()).then(() => setIsLoading(false));\n    }, [dispatch]);\n    const sessionUser = useSelector(state => state.session.user);\n    if (isLoading) return (<>Loading...</>);\n    const playlistsByUser = playlists ? playlists.filter(playlist => playlist.user_id === sessionUser.id) : [];\n    const hasPlaylists = playlistsByUser.length > 0;\n    return (\n        <div>\n            <p className='title'>Manage Playlists</p>\n            {/* {!hasPlaylists && <Link to={'/playlists/new'}><button className='createPlaylistButton'>Create a New Playlist</button></Link>} */}\n            {hasPlaylists && <ul className='managePlaylistIndex'>\n                {playlistsByUser.map((playlist) => (\n                    <li className='manageEachPlaylist' key={String(playlist.id)}>\n                        <PlaylistIndexItem playlist={playlist}/>\n                    </li>\n                ))}\n             </ul>}\n        </div>\n    );\n};\n\nexport default ManagePlaylists;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/CreateSong/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AlbumDetails/index.js",["231","232","233","234","235"],"import './AlbumDetails.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlbumDetails} from '../../store/albums';\nimport DeleteAlbumModal from '../DeleteAlbumModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\n\n\nconst AlbumDetails = () => {\n  const dispatch = useDispatch();\n  const { albumId } = useParams();\n  console.log(\"This is albumId:\", albumId)\n  const sessionUser = useSelector(state => state.session.user);\n  const album = useSelector(state => state.albumsReducer[albumId]);\n  console.log(\"this is album:\" ,album)\n  const [isLoading, setIsLoading] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n\n  useEffect(() => {\n    dispatch(getAlbumDetails(albumId)).then(() => setIsLoading(false));\n  }, [dispatch, albumId]);\n  if (isLoading || !album) return (<>Loading...</>);\n  const {user_id, artist_id, title, lyrics, url, duration, release_date} = album;\n\n  const closeMenu = (e) => {\n    if (!ulRef.current?.contains(e.target)) {\n      setShowMenu(false);\n    }\n  };\n\n  return (\n    <>\n    <div className='grid-container'>\n      <p className='title'>{title}</p>\n      <p className='lyrics'>{lyrics}</p>\n      <p className='duration'>{duration}</p>\n      <p className='release_date'>{release_date}</p>\n    </div>\n    <button>\n        <OpenModalMenuItem\n          itemText=\"Delete\"\n          onItemClick={closeMenu}\n          modalComponent={<DeleteAlbumModal album = {album}/>}\n        />\n      </button>\n    </>\n  )\n};\n\nexport default AlbumDetails;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SongDetails/index.js",["236","237","238","239","240","241","242","243"],"import './SongDetails.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSongDetails } from '../../store/songs';\nimport DeleteSongModal from '../DeleteSongModal';\nimport AddSongToAlbumModal from '../AddSongToAlbumModal';\nimport AddSongToPlaylistModal from '../AddSongToPlaylistModal';\nimport RemoveSongFromAlbumModal from '../RemoveSongFromAlbumModal';\nimport RemoveSongFromPlaylistModal from '../RemoveSongFromPlaylistModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport { getSongLikes, getAllLikes } from '../../store/likes';\nimport LikeSong from '../LikeSong';\nimport { getMyAlbums, deleteAlbumSong } from '../../store/albums';\nimport { getMyPlaylists, removeSongFromPlaylistThunk } from '../../store/playlists';\n\n\n\nconst SongDetails = () => {\n  const dispatch = useDispatch();\n  const { songId } = useParams();\n  const sessionUser = useSelector(state => state.session.user);\n  const song = useSelector(state => state.songsReducer[songId]);\n  const like = useSelector(state => state.likesReducer.likes);\n  console.log(\"this is song:\", song)\n  console.log(\"this is like:\", like)\n  const [isLoading, setIsLoading] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n  const albums = useSelector(state => state.albumsReducer);\n  const playlists = useSelector(state => state.playlistsReducer.playlists);\n  const hasAlbums = Object.keys(albums).length > 0;\n  const hasPlaylists = Object.keys(playlists).length > 0;\n\n\n  useEffect(() => {\n    dispatch(getSongDetails(songId)).then(()=>dispatch(getAllLikes())).then(()=>dispatch(getSongLikes(songId))).then(() => setIsLoading(false));\n  }, [dispatch, songId]);\n  if (isLoading || !song) return (<>Loading...</>);\n  const { user_id, artist_id, title, lyrics, url, duration, release_date } = song;\n\n  const sessionUserId = sessionUser ? sessionUser.id : null;\n  //check Delete Song auth\n  const checkUserVSOwner = sessionUserId === user_id ? true : false;\n\n  const closeMenu = (e) => {\n    if (!ulRef.current?.contains(e.target)) {\n      setShowMenu(false);\n    }\n  };\n\n  return (\n    <>\n      <div className='grid-container'>\n        <img id =\"songdetialimage\" src={url} alt=\"songdetailimage\"/>\n        <p className='title'>{title}</p>\n        <p className='lyrics'>{lyrics}</p>\n        <p className='duration'>{duration}</p>\n        <p className='release_date'>{release_date}</p>\n      </div>\n      {sessionUser && <LikeSong userId={user_id} songId={songId}/>}\n      {checkUserVSOwner &&\n      <button onClick={closeMenu}>\n        <OpenModalMenuItem\n          itemText=\"Delete Song\"\n          onItemClick={closeMenu}\n          modalComponent={<DeleteSongModal song={song}/>}\n        />\n      </button>}\n      {sessionUserId && <button> <OpenModalMenuItem itemText=\"Add Song to Album\" onItemClick={closeMenu} modalComponent={<AddSongToAlbumModal song = {song}/>}/> </button>}\n      {sessionUserId && <button> <OpenModalMenuItem itemText=\"Add Song to Playlist\" onItemClick={closeMenu} modalComponent={<AddSongToPlaylistModal song = {song}/>}/> </button>}\n      {sessionUserId && <button> <OpenModalMenuItem itemText=\"Remove Song from Album\" onItemClick={closeMenu} modalComponent={<RemoveSongFromAlbumModal song = {song}/>}/> </button>}\n      {sessionUserId && <button> <OpenModalMenuItem itemText=\"Remove Song from Playlist\" onItemClick={closeMenu} modalComponent={<RemoveSongFromPlaylistModal song = {song}/>}/> </button>}\n      {/* {sessionUserId && hasAlbums && <button> <OpenModalMenuItem itemText=\"Remove Song from Album\" onItemClick={closeMenu} modalComponent={<RemoveSongFromAlbumModal song = {song}/>}/> </button>}\n      {sessionUserId && hasPlaylists && <button> <OpenModalMenuItem itemText=\"Remove Song from Playlist\" onItemClick={closeMenu} modalComponent={<RemoveSongFromPlaylistModal song = {song}/>}/> </button>} */}\n    </>\n  )\n};\n\nexport default SongDetails;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/UpdateAlbum/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/CreateAlbum/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Navigation/index.js",["244","245","246"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport './Navigation.css';\nimport MenuLibrary from '../MenuLibrary';\nimport MainPageContent from '../MainPageContent';\n\nfunction Navigation({ isLoaded }){\n\tconst sessionUser = useSelector(state => state.session.user);\n\n\treturn (\n\t\t<nav>\n\t\t\t{/* <div id=\"LibraryMenu\">\n\t\t\t\t\t<MenuLibrary />\n\t\t\t</div> */}\n\t\t\t<div id=\"loginsignupnavbar\">\n\t\t\t\t{isLoaded && (\n\t\t\t\t\t<ProfileButton user={sessionUser} />\n\t\t\t\t)}\n\t\t\t\t{/* {isLoaded && (\n\t\t\t\t<div id=\"viewallthree\">\n\t\t\t\t\t<MainPageContent />\n\t\t\t\t</div>)} */}\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Navigation;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Home/index.js",["247","248","249"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from '../Navigation/ProfileButton';\nimport './Home.css';\nimport MenuLibrary from '../MenuLibrary';\nimport MainPageContent from '../MainPageContent';\n\nfunction Home(){\n\n\treturn (\n\t\t<nav>\n\t\t\t<div class=\"homewrapper\">\n                <div class=\"homeitem-1\">\n                    <MenuLibrary />\n                </div>\n                <div class=\"homeitem-2\">\n                    <MainPageContent />\n                </div>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Home;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Navigation/OpenModalMenuItem.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AlbumIndexItem/index.js",["250","251","252","253","254"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { albumDetails } from \"../../store/albums\";\nimport { Link } from 'react-router-dom';\nimport \"./AlbumIndexItem.css\";\nconst AlbumIndexItem = ({ album }) => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const { id, title, url} = album;\n    const sessionUserId = sessionUser ? sessionUser.id : null;\n\n    return (\n        <Link id=\"albumlinkwithtext\" to={`/albums/${id}`} key={`${id}`}>\n            <div id=\"albumgrid1\">\n                <div id=\"albumitem1\">\n                    <img id=\"albumImage\" src={url} alt=\"album\" />\n                </div>\n                <div id=\"albumitem2\">\n                    {title}\n                </div>\n            </div>\n        </Link>\n\n\n    );\n}\n\nexport default AlbumIndexItem;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SongIndexItem/index.js",["255","256","257","258"],"import './SongIndexItem.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport DeleteSongModal from '../DeleteSongModal/index';\n\nconst SongItem = ({ song }) => {\n  console.log(\"Song in SongIndexItem:\", song);\n  console.log(\"Title:\", song.title);\n  console.log(\"User ID:\", song.user_id);\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const {id, title, url, user_id} = song;\n  const sessionUserId = sessionUser ? sessionUser.id : null;\n  const checkUserVSOwner = sessionUserId === user_id ? true : false;\n  return (\n    <div className='songTile'>\n      <Link id=\"songlinkwithtext\" to={`/songs/${song.id}`}  key={`${id}`}>\n        {/* <hr /> */}\n        <div id=\"songgrid1\">\n            <div id=\"songitem1\">\n                <img id =\"songImage\" src={url} alt=\"song\"/>\n            </div>\n            <div id=\"songitem2\">\n                {title}\n            </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default SongItem;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/PlaylistIndexItem/index.js",["259","260","261","262"],"import './PlaylistIndexItem.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport DeletePlaylistModal from '../DeletePlaylistModal/index';\n\nconst PlaylistItem = ({ playlist }) => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const {id, title, user_id, url} = playlist;\n  const sessionUserId = sessionUser ? sessionUser.id : null;\n  const checkUserVSOwner = sessionUserId === user_id ? true : false;\n  return (\n    // <div className='playlistTile'>\n    //   <span className='tooltip'>{title}</span>\n    //   <Link to={`/playlists/${playlist.id}`}><p className='title'>{title}</p></Link>\n    //   {checkUserVSOwner && <OpenModalMenuItem itemText='Delete' modalComponent={<DeletePlaylistModal playlist={playlist}/>}/>}\n    // </div>\n    <div className='playlistTile'>\n    <Link id=\"playlistlinkwithtext\" to={`/playlists/${playlist.id}`}  key={`${id}`}>\n      {/* <hr /> */}\n      <div id=\"playlistgrid1\">\n          <div id=\"playlistitem1\">\n              <img id =\"playlistImage\" src={url} alt=\"playlist\"/>\n          </div>\n          <div id=\"playlistitem2\">\n              {title}\n          </div>\n      </div>\n    </Link>\n  </div>\n  );\n};\n\nexport default PlaylistItem;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SongForm/index.js",["263","264","265"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSong, updateSong } from '../../store/songs';\nimport { fetchAllArtists } from '../../store/artists';\nimport MenuLibrary from '../MenuLibrary';\nimport './SongForm.css';\n\nconst SongForm = ({ song, formType }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [artistName, setArtistName] = useState(song?.artist_name || '');\n  const [title, setTitle] = useState(song?.title || '');\n  const [lyrics, setLyrics] = useState(song?.lyrics || '');\n  const [url, setUrl] = useState(song?.url || '');\n  const [duration, setDuration] = useState(song?.duration || '');\n  const [release_date, setReleaseDate] = useState(song?.release_date || '');\n  const [song_file, setSongFile] = useState(null);\n  const [songLoading, setSongLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const formTitle = formType === 'Create Song' ? 'Create a New Song' : 'Update Your Song';\n  const isValidUrl = (value) => {\n    try {\n      new URL(value);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!artistName || artistName.trim() === '') {\n      newErrors.artistName = 'Artist Name is required';\n    }\n    if (!title || title.trim() === '') {\n      newErrors.title = 'Title is required';\n    }\n    if (!lyrics || lyrics.trim() === '') {\n      newErrors.lyrics = 'Lyrics is required';\n    }\n    if (!isValidUrl(url)) {\n      newErrors.url = 'Invalid URL format';\n    }\n    if (!duration || duration.trim() === '') {\n      newErrors.duration = 'Duration is required';\n    }\n    if (!release_date || release_date.trim() === '') {\n      newErrors.release_date = 'Release Date is required';\n    }\n    if (!song_file || song_file.trim() === '') {\n      newErrors.song_file = 'Song File is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors({});\n    const isFormValid = validateForm();\n    const formData = new FormData();\n    formData.append(\"song_file\", song_file);\n    formData.append(\"artist_name\", artistName);\n    formData.append(\"title\", title);\n    formData.append(\"lyrics\", lyrics);\n    formData.append(\"url\", url);\n    formData.append(\"duration\", duration);\n    formData.append(\"releaseDate\", release_date);\n    setSongLoading(true);\n    if (isFormValid){\n      try {\n        if (formType === 'Update Song') {\n          await dispatch(updateSong(song));\n        } else if (formType === 'Create Song') {\n          await dispatch(createSong(song));\n        }\n        history.push('/songs');\n      } catch (error) {\n        console.error(\"Error:\", error);\n        if (error instanceof TypeError) {\n          console.error(\"Error: res.json is not a function\");\n        }\n      }\n    }\n  };\n\n  const artistNameError = errors.artistName ? 'Artist Name: ' + errors.artistName : null;\n  const titleError = errors.title ? 'Title: ' + errors.title : null;\n  const lyricsError = errors.lyrics ? 'Lyrics: ' + errors.lyrics : null;\n  const urlError = errors.url ? 'URL: ' + errors.url : null;\n  const durationError = errors.duration ? 'Duration: ' + errors.duration : null;\n  const releaseDateError = errors.release_date ? 'Release Date: ' + errors.release_date : null;\n  const songFileError = errors.song_file ? 'Song File: ' + errors.song_file : null;\n\n  return (\n    <div className='body'>\n      <form className='form' onSubmit={handleSubmit} encType=\"multipart/form-data\">\n        <p className='formHeading'>{formTitle}</p>\n        {/* <div className=\"songform-1\">\n          <MenuLibrary/>\n        </div> */}\n        <div className='errors'>\n          <ul>{artistNameError}</ul>\n          <ul>{titleError}</ul>\n          <ul>{lyricsError}</ul>\n          <ul>{urlError}</ul>\n          <ul>{durationError}</ul>\n          <ul>{releaseDateError}</ul>\n          <ul>{songFileError}</ul>\n        </div>\n        <p className='formSubheading'>Want to share your song?</p>\n        <p className='nomal'>Some details about your song.</p>\n        <div className='formNormal'>\n          <label>\n            Artist Name<br />\n            <input type=\"text\" value={artistName} placeholder=\"Artist Name\" onChange={(e) => setArtistName(e.target.value)} /><br />\n          </label>\n          <label>\n            Song Title<br />\n            <input type=\"text\" value={title} placeholder=\"Song Title\" onChange={(e) => setTitle(e.target.value)} /><br />\n          </label>\n          <label>\n            Lyrics<br />\n            <input type=\"text\" value={lyrics} placeholder=\"Lyrics\" onChange={(e) => setLyrics(e.target.value)} /><br />\n          </label>\n          <label>\n            Song Image URL<br />\n            <input type=\"text\" value={url} placeholder=\"Song Image URL\" onChange={(e) => setUrl(e.target.value)} /><br />\n          </label>\n          <label>\n            Song Duration<br />\n            <input type=\"text\" value={duration} placeholder=\"Song Duration\" onChange={(e) => setDuration(e.target.value)} />\n          </label>\n          <label>\n            Release Date<br />\n            <input type=\"text\" value={release_date} placeholder=\"Release Date\" onChange={(e) => setReleaseDate(e.target.value)} /><br />\n          </label>\n          <label>\n            Upload Song File<br />\n            <input type=\"file\" accept=\"audio/*\" placeholder=\"Upload Song File\" onChange={(e) => setSongFile(e.target.files[0])} /><br />\n          </label>\n        </div>\n        <button className='submitFormButton' type=\"submit\">{formType}</button>\n        {songLoading && <p>Loading...</p>}\n      </form>\n    </div>\n  );\n};\n\nexport default SongForm;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/Navigation/ProfileButton.js",["266"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { logout } from \"../../store/session\";\nimport { Link } from 'react-router-dom';\nimport * as sessionActions from '../../store/session';\nimport OpenModalMenuItem from './OpenModalMenuItem';\nimport LoginFormModal from '../LoginFormModal';\nimport SignupFormModal from '../SignupFormModal';\nimport \"./ProfileButton.css\";\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n\n  const openMenu = (e) => {\n    e.stopPropagation();\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = (e) => {\n      if (!ulRef.current.contains(e.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener('click', closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const closeMenu = () => setShowMenu(false);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n    closeMenu();\n  };\n\n  const ulClassName = \"profile-dropdown\" + (showMenu ? \"\" : \" hidden\");\n\n  return (\n    <div id=\"profileNavButtonMenuItem\">\n      {(!user) &&\n        <div id=\"menuitemlogin\">\n          <OpenModalMenuItem\n          itemText=\"Log In\"\n          onItemClick={closeMenu}\n          modalComponent={<LoginFormModal />}\n          />\n        </div>\n      }\n      {(!user) &&\n        <div id=\"menuitemsignup\">\n        <OpenModalMenuItem\n        itemText=\"Sign Up\"\n        onItemClick={closeMenu}\n        modalComponent={<SignupFormModal />}\n        />\n        </div>\n      }\n      <div id=\"iconandcloseopenmenu\">\n      {user && !showMenu &&\n        <div id=\"openMenuNavButton\" onClick={openMenu}>\n          <i className=\"fas fa-user-circle fa-2x\"/>\n          <i className=\"fas fa-sort-down fa-2x\"></i>\n        </div>}\n      {user && showMenu &&\n        <div id=\"closeMenuNavButton\" onClick={closeMenu}>\n        <i className=\"fas fa-user-circle fa-2x\"/>\n        <i className=\"fas fa-sort-up fa-2x\"></i>\n        </div>}\n      <section className={ulClassName} ref={ulRef}>\n        {user ? (\n          <div id=\"menuwithlogout\">\n            <div>Hello, {user.firstName}</div>\n            <div>{user.email}</div>\n            <div>\n              <hr/>\n              <div onClick={logout}><Link id=\"menulogout\" to=\"/\" >Log Out</Link></div>\n            </div>\n          </div>\n        ) : null}\n      </section>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileButton;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AlbumForm/index.js",["267"],"import './AlbumForm.css';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createAlbum, updateAlbum } from '../../store/albums';\n\nconst AlbumForm = ({ album, formType }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState(album?.title);\n  const [url, setUrl] = useState(album?.url);\n  const [release_date, setReleaseDate] = useState(album?.release_date);\n  const [copyright, setCopyright] = useState(album?.copyright || '');\n  const [errors, setErrors] = useState({});\n\n  const formTitle = formType === 'Create Album' ? 'Create a New Album' : 'Update Your Album';\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors({});\n\n    album = { ...album, title, release_date, url, copyright };\n\n    if (formType === 'Update Album') {\n      dispatch(updateAlbum(album))\n        .then((newAlbum) => history.push(`/albums/${newAlbum.id}`))\n        .catch(async (res) => {\n          const data = await res.json();\n          if (data && data.errors) {\n            setErrors(data.errors);\n          }\n        });\n    } else if (formType === 'Create Album') {\n      console.log(\"This is the album:\", album)\n      dispatch(createAlbum(album))\n        .then((newAlbum) => history.push(`/albums/${newAlbum.id}`))\n        .catch(async (res) => {\n          const data = await res.json();\n          if (data && data.errors) {\n            setErrors(data.errors);\n          }\n        });\n    }\n  };\n\n  const titleError = errors.title ? 'Title: ' + errors.title : null;\n  const urlError = errors.url ? 'URL: ' + errors.url : null;\n  const durationError = errors.duration ? 'Duration: ' + errors.duration : null;\n  const releaseDateError = errors.releaseDate ? 'Release Date: ' + errors.releaseDate : null;\n  const copyrightError = errors.copyright ? 'Copyright: ' + errors.copyright : null;\n\n  return (\n    <div className='body'>\n      <form className='form' onSubmit={handleSubmit}>\n        <p className='formHeading'>{formTitle}</p>\n        <div className='errors'>\n          <ul>{titleError}</ul>\n          <ul>{urlError}</ul>\n          <ul>{durationError}</ul>\n          <ul>{releaseDateError}</ul>\n        </div>\n        <p className='formSubheading'>Want to share your album?</p>\n        <p className='nomal'>Some details about your album.</p>\n        <div className='formNormal'>\n          <label>\n            Album Title<br />\n            <input type=\"text\" value={title} placeholder=\"Album Title\" onChange={(e) => setTitle(e.target.value)} /><br />\n          </label>\n          <label>\n            Album Image URL<br />\n            <input type=\"text\" value={url} placeholder=\"Album Image URL\" onChange={(e) => setUrl(e.target.value)} /><br />\n          </label>\n          <label>\n            Release Date<br />\n            <input type=\"text\" value={release_date} placeholder=\"Release Date\" onChange={(e) => setReleaseDate(e.target.value)} /><br />\n          </label>\n          <label>\n            Copyright<br />\n            <input type=\"text\" value={copyright} placeholder=\"Copyright\" onChange={(e) => setCopyright(e.target.value)} /><br />\n          </label>\n        </div>\n        <button className='submitFormButton' type=\"submit\">{formType}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AlbumForm;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/DeletePlaylistModal/index.js",["268"],"import './DeletePlaylist.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deletePlaylistThunk } from '../../store/playlists';\n\nconst DeletePlaylistModal = ({playlist}) => {\n    const playlistId = playlist.id;\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const {closeModal} = useModal();\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        dispatch(deletePlaylistThunk(playlistId))\n        .then(closeModal)\n        .catch(async (res) => {\n            const data = await res.json();\n            if (data && data.errors) {\n              setErrors(data.errors);\n            }\n        });\n    };\n    return (\n        <div>\n            <p className='heading'>Confirm Delete</p>\n            <p className='subheading'>Are you sure you want to remove this playlist?</p>\n            <button className='deletePlaylistYes' onClick={handleDelete}>Yes - Delete Playlist</button><br/>\n            <button className='deletePlaylistNo' onClick={closeModal}>No - Keep Playlist</button>\n        </div>\n    );\n}\n\nexport default DeletePlaylistModal;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AddSongToAlbumModal/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/AddSongToPlaylistModal/index.js",["269"],"import './AddSongToPlaylistModal.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { getMyPlaylists, addSongToPlaylistThunk } from '../../store/playlists';\n\nconst AddSongToPlaylistModal = ({song}) => {\n    const songId = song.id;\n    const dispatch = useDispatch();\n    // const playlists = useSelector(state => state.playlistsReducer.playlists);\n    const playlists = useSelector(state => state.playlistsReducer);\n    console.log('playlists', playlists);\n    const [isLoading, setIsLoading] = useState(true);\n    const [errors, setErrors] = useState({});\n    const {closeModal} = useModal();\n\n    useEffect(() => {\n        dispatch(getMyPlaylists()).then(() => setIsLoading(false));\n      }, [dispatch]);\n\n    const handleAddSong = async (playlistId) => {\n        dispatch(addSongToPlaylistThunk(playlistId, songId))\n        .then(closeModal)\n        .catch(async (res) => {\n            const data = await res.json();\n            if (data && data.errors) {\n              setErrors(data.errors);\n            }\n        });\n    };\n\n    if (isLoading ) return (<>Loading...</>);\n\n    return (\n        <div>\n            <p className='heading'>Which playlist would you like to add this song to?</p>\n            <ul>\n                {Object.values(playlists.playlists).map((playlist) => (\n                    <li key={playlist.id}>\n                        <button className='addSongToPlaylist' onClick={() => handleAddSong(playlist.id)}>{playlist.title}</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default AddSongToPlaylistModal;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/RemoveSongFromPlaylistModal/index.js",["270"],"import './RemoveSongFromPlaylistModal.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { getMyPlaylists, removeSongFromPlaylistThunk } from '../../store/playlists';\n\nconst RemoveSongFromPlaylistModal = ({song}) => {\n    const songId = song.id;\n    const dispatch = useDispatch();\n    const playlists = useSelector(state => state.playlistsReducer.playlists);\n    // playlists that have this song:\n    // Object.keys(playlists).forEach(key => {\n    //     if (Array.isArray(playlists[key].songs) && !playlists[key].songs.includes(songId)) {\n    //       return true;\n    //     } else {\n    //       delete playlists[key];\n    //       return false;\n    //     }\n    //   });\n\n    console.log('playlists', playlists);\n    const [isLoading, setIsLoading] = useState(true);\n    const [errors, setErrors] = useState({});\n    const {closeModal} = useModal();\n\n    useEffect(() => {\n        dispatch(getMyPlaylists()).then(() => setIsLoading(false));\n      }, [dispatch]);\n\n    const handleDelete = async (playlistId) => {\n        dispatch(removeSongFromPlaylistThunk(playlistId, songId))\n        .then(closeModal)\n        .catch(async (res) => {\n            const data = await res.json();\n            if (data && data.errors) {\n              setErrors(data.errors);\n            }\n        });\n    };\n\n    if (isLoading ) return (<>Loading...</>);\n\n    return (\n        <div>\n            <p className='heading'>Which playlist would you like to delete this song from?</p>\n            <ul>\n                {Object.values(playlists).map((playlist) => (\n                    <li key={playlist.id}>\n                        <button className='deleteSongFromPlaylist' onClick={() => handleDelete(playlist.id)}>{playlist.title}</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default RemoveSongFromPlaylistModal;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/MainPageContent/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/RemoveSongFromAlbumModal/index.js",["271"],"import './RemoveSongFromAlbumModal.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { getMyAlbums, deleteAlbumSong } from '../../store/albums';\n\nconst RemoveSongFromAlbumModal = ({song}) => {\n    const songId = song.id;\n    const dispatch = useDispatch();\n    let albums = useSelector(state => state.albumsReducer);\n    // albums that have this song:\n    Object.keys(albums).forEach(key => {\n        if (Array.isArray(albums[key].songs) && !albums[key].songs.includes(songId)) {\n          return true;\n        } else {\n          delete albums[key];\n          return false;\n        }\n      });\n\n    console.log('albums', albums);\n    const [isLoading, setIsLoading] = useState(true);\n    const [errors, setErrors] = useState({});\n    const {closeModal} = useModal();\n\n    useEffect(() => {\n        dispatch(getMyAlbums()).then(() => setIsLoading(false));\n      }, [dispatch]);\n\n    const handleDelete = async (albumId) => {\n        dispatch(deleteAlbumSong(albumId, songId))\n        .then(closeModal)\n        .catch(async (res) => {\n            const data = await res.json();\n            if (data && data.errors) {\n              setErrors(data.errors);\n            }\n        });\n    };\n\n    if (isLoading ) return (<>Loading...</>);\n\n    return (\n        <div>\n            <p className='heading'>Which album would you like to delete this song from?</p>\n            <ul>\n                {Object.values(albums).map((album) => (\n                    <li key={album.id}>\n                        <button className='deleteSongFromAlbum' onClick={() => handleDelete(album.id)}>{album.title}</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default RemoveSongFromAlbumModal;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/DeleteSongModal/index.js",["272"],"import './DeleteSong.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deleteSong } from '../../store/songs';\nimport { useHistory } from 'react-router-dom';\n\nconst DeleteSongModal = ({ song }) => {\n    const songId = song.id;\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const { closeModal } = useModal();\n    const history = useHistory();\n\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        try {\n            await dispatch(deleteSong(songId));\n            closeModal();\n            history.push('/songs');\n        } catch (error) {\n            console.error('Error deleting song:', error);\n\n            try {\n                const data = await error.json();\n                if (data && data.errors) {\n                    setErrors(data.errors);\n                }\n            } catch (jsonError) {\n                console.error('Error parsing JSON:', jsonError);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <p className='heading'>Confirm Delete</p>\n            <p className='subheading'>Are you sure you want to remove this song?</p>\n            <button className='deleteSongYes' onClick={handleDelete}>Yes - Delete Song</button><br />\n            <button className='deleteSongNo' onClick={closeModal}>No - Keep Song</button>\n        </div>\n    );\n}\n\nexport default DeleteSongModal;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/DeleteAlbumModal/index.js",["273"],"import './DeleteAlbum.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deleteAlbum } from '../../store/albums';\nimport { useHistory } from 'react-router-dom';\n\nconst DeleteAlbumModal = ({album}) => {\n    const albumId = album.id;\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const {closeModal} = useModal();\n    const history = useHistory();\n\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        try {\n            await dispatch(deleteAlbum(albumId));\n            closeModal();\n            history.push('/albums');\n        } catch (error) {\n            console.error('Error deleting album:', error);\n\n            try {\n                const data = await error.json();\n                if (data && data.errors) {\n                    setErrors(data.errors);\n                }\n            } catch (jsonError) {\n                console.error('Error parsing JSON:', jsonError);\n            }\n        }\n    };\n    return (\n        <div>\n            <p className='heading'>Confirm Delete</p>\n            <p className='subheading'>Are you sure you want to remove this album?</p>\n            <button className='deleteAlbumYes' onClick={handleDelete}>Yes - Delete Album</button><br/>\n            <button className='deleteAlbumNo' onClick={closeModal}>No - Keep Album</button>\n        </div>\n    );\n}\n\nexport default DeleteAlbumModal;\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/LikeSong/index.js",["274","275","276","277","278","279"],"import './LikeSong.css';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllLikes, getSongLikes,createLike, deleteLike } from '../../store/likes';\nimport { getSongDetails } from '../../store/songs';\n\nfunction LikeSong({songId, userId}) {\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(true);\n    console.log(\"parseInt(songId)\", parseInt(songId))\n    songId = parseInt(songId);\n    const likes = useSelector(state => state.likesReducer.likes);\n    // console.log(\"Object.values(likes)[0].user_id\", Object.values(likes)[0].user_id);\n    const currLike = Object.values(likes).filter((curr, index)=> (curr.user_id == userId && curr.song_id == songId))\n    // console.log(\"currLike\", currLike);\n    // console.log(\"currLike[0].id\", currLike[0].id);\n    // console.log(\"currLike.length\", currLike.length);\n    const[isliked, setIsLiked] = useState(currLike.length==true);\n    useEffect(() => {\n      dispatch(getSongDetails(songId)).then(()=>dispatch(getSongLikes(songId))).then(() => setIsLoading(false));\n    }, [dispatch, songId, currLike.length]);\n\n  if (isLoading) return (<>Loading...</>);\n  const handleClick = () => {\n      if(isliked == 1 ){\n      let likeId;\n      if(currLike.length){\n        likeId = currLike[0].id;\n      }\n      // const likeId = currLike[0].id;\n      console.log(\"deleteLikesongId\", songId, likeId)\n      dispatch(deleteLike(likeId, songId))\n      console.log(\"like\", currLike)\n    }\n    if(isliked == 0)\n  {\n    console.log(\"createLikesongId\", songId, userId)\n    const addlike = {\"user_id\" : userId,\n      \"song_id\" : songId };\n    dispatch(createLike(addlike, songId))\n    console.log(\"like\", currLike)\n    }\n    setIsLiked(!isliked);\n  };\n  console.log(\"isliked\", isliked)\n\n  if(!isliked)\n\n    return (<button\n    onClick={handleClick}>like</button>\n      )\n  return (<button\n  onClick={handleClick}>unlike</button>)\n}\n\nexport default LikeSong\n","/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/MenuLibrary/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/LoginFormModal/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/SignupFormModal/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/UpdatePlaylist/index.js",[],"/Users/tiffanyliu/Downloads/Coding/AA/AA_Projects/GroupProjectSpotify/react-app/src/components/PlaylistForm/index.js",["280"],{"ruleId":"281","severity":1,"message":"282","line":11,"column":8,"nodeType":"283","messageId":"284","endLine":11,"endColumn":20},{"ruleId":"285","severity":1,"message":"286","line":166,"column":34,"nodeType":"287","messageId":"288","endLine":168,"endColumn":10},{"ruleId":"285","severity":1,"message":"286","line":93,"column":30,"nodeType":"287","messageId":"288","endLine":95,"endColumn":10},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"281","severity":1,"message":"293","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":14},{"ruleId":"281","severity":1,"message":"294","line":13,"column":9,"nodeType":"283","messageId":"284","endLine":13,"endColumn":20},{"ruleId":"281","severity":1,"message":"295","line":17,"column":10,"nodeType":"283","messageId":"284","endLine":17,"endColumn":18},{"ruleId":"281","severity":1,"message":"296","line":30,"column":10,"nodeType":"283","messageId":"284","endLine":30,"endColumn":17},{"ruleId":"281","severity":1,"message":"297","line":30,"column":19,"nodeType":"283","messageId":"284","endLine":30,"endColumn":28},{"ruleId":"281","severity":1,"message":"298","line":30,"column":45,"nodeType":"283","messageId":"284","endLine":30,"endColumn":48},{"ruleId":"281","severity":1,"message":"299","line":30,"column":74,"nodeType":"283","messageId":"284","endLine":30,"endColumn":79},{"ruleId":"281","severity":1,"message":"293","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":14},{"ruleId":"281","severity":1,"message":"294","line":14,"column":9,"nodeType":"283","messageId":"284","endLine":14,"endColumn":20},{"ruleId":"281","severity":1,"message":"295","line":18,"column":10,"nodeType":"283","messageId":"284","endLine":18,"endColumn":18},{"ruleId":"281","severity":1,"message":"296","line":25,"column":10,"nodeType":"283","messageId":"284","endLine":25,"endColumn":17},{"ruleId":"281","severity":1,"message":"297","line":25,"column":19,"nodeType":"283","messageId":"284","endLine":25,"endColumn":28},{"ruleId":"281","severity":1,"message":"298","line":25,"column":45,"nodeType":"283","messageId":"284","endLine":25,"endColumn":48},{"ruleId":"281","severity":1,"message":"300","line":14,"column":10,"nodeType":"283","messageId":"284","endLine":14,"endColumn":21},{"ruleId":"281","severity":1,"message":"301","line":14,"column":23,"nodeType":"283","messageId":"284","endLine":14,"endColumn":38},{"ruleId":"281","severity":1,"message":"302","line":15,"column":10,"nodeType":"283","messageId":"284","endLine":15,"endColumn":24},{"ruleId":"281","severity":1,"message":"303","line":15,"column":26,"nodeType":"283","messageId":"284","endLine":15,"endColumn":53},{"ruleId":"281","severity":1,"message":"295","line":28,"column":10,"nodeType":"283","messageId":"284","endLine":28,"endColumn":18},{"ruleId":"281","severity":1,"message":"304","line":32,"column":9,"nodeType":"283","messageId":"284","endLine":32,"endColumn":18},{"ruleId":"281","severity":1,"message":"305","line":33,"column":9,"nodeType":"283","messageId":"284","endLine":33,"endColumn":21},{"ruleId":"281","severity":1,"message":"297","line":40,"column":20,"nodeType":"283","messageId":"284","endLine":40,"endColumn":29},{"ruleId":"281","severity":1,"message":"306","line":2,"column":10,"nodeType":"283","messageId":"284","endLine":2,"endColumn":17},{"ruleId":"281","severity":1,"message":"307","line":6,"column":8,"nodeType":"283","messageId":"284","endLine":6,"endColumn":19},{"ruleId":"281","severity":1,"message":"308","line":7,"column":8,"nodeType":"283","messageId":"284","endLine":7,"endColumn":23},{"ruleId":"281","severity":1,"message":"306","line":2,"column":10,"nodeType":"283","messageId":"284","endLine":2,"endColumn":17},{"ruleId":"281","severity":1,"message":"309","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":21},{"ruleId":"281","severity":1,"message":"310","line":4,"column":8,"nodeType":"283","messageId":"284","endLine":4,"endColumn":21},{"ruleId":"281","severity":1,"message":"311","line":1,"column":10,"nodeType":"283","messageId":"284","endLine":1,"endColumn":19},{"ruleId":"281","severity":1,"message":"312","line":1,"column":21,"nodeType":"283","messageId":"284","endLine":1,"endColumn":29},{"ruleId":"281","severity":1,"message":"313","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":22},{"ruleId":"281","severity":1,"message":"314","line":7,"column":11,"nodeType":"283","messageId":"284","endLine":7,"endColumn":19},{"ruleId":"281","severity":1,"message":"315","line":10,"column":11,"nodeType":"283","messageId":"284","endLine":10,"endColumn":24},{"ruleId":"281","severity":1,"message":"316","line":4,"column":8,"nodeType":"283","messageId":"284","endLine":4,"endColumn":25},{"ruleId":"281","severity":1,"message":"317","line":5,"column":8,"nodeType":"283","messageId":"284","endLine":5,"endColumn":23},{"ruleId":"281","severity":1,"message":"314","line":11,"column":9,"nodeType":"283","messageId":"284","endLine":11,"endColumn":17},{"ruleId":"281","severity":1,"message":"318","line":15,"column":9,"nodeType":"283","messageId":"284","endLine":15,"endColumn":25},{"ruleId":"281","severity":1,"message":"316","line":4,"column":8,"nodeType":"283","messageId":"284","endLine":4,"endColumn":25},{"ruleId":"281","severity":1,"message":"319","line":5,"column":8,"nodeType":"283","messageId":"284","endLine":5,"endColumn":27},{"ruleId":"281","severity":1,"message":"314","line":8,"column":9,"nodeType":"283","messageId":"284","endLine":8,"endColumn":17},{"ruleId":"281","severity":1,"message":"318","line":12,"column":9,"nodeType":"283","messageId":"284","endLine":12,"endColumn":25},{"ruleId":"281","severity":1,"message":"309","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":21},{"ruleId":"281","severity":1,"message":"320","line":5,"column":10,"nodeType":"283","messageId":"284","endLine":5,"endColumn":25},{"ruleId":"281","severity":1,"message":"307","line":6,"column":8,"nodeType":"283","messageId":"284","endLine":6,"endColumn":19},{"ruleId":"281","severity":1,"message":"321","line":3,"column":10,"nodeType":"283","messageId":"284","endLine":3,"endColumn":16},{"ruleId":"281","severity":1,"message":"322","line":50,"column":9,"nodeType":"283","messageId":"284","endLine":50,"endColumn":23},{"ruleId":"281","severity":1,"message":"323","line":10,"column":12,"nodeType":"283","messageId":"284","endLine":10,"endColumn":18},{"ruleId":"281","severity":1,"message":"323","line":14,"column":12,"nodeType":"283","messageId":"284","endLine":14,"endColumn":18},{"ruleId":"281","severity":1,"message":"323","line":23,"column":12,"nodeType":"283","messageId":"284","endLine":23,"endColumn":18},{"ruleId":"281","severity":1,"message":"323","line":23,"column":12,"nodeType":"283","messageId":"284","endLine":23,"endColumn":18},{"ruleId":"281","severity":1,"message":"323","line":11,"column":12,"nodeType":"283","messageId":"284","endLine":11,"endColumn":18},{"ruleId":"281","severity":1,"message":"323","line":11,"column":12,"nodeType":"283","messageId":"284","endLine":11,"endColumn":18},{"ruleId":"281","severity":1,"message":"324","line":4,"column":10,"nodeType":"283","messageId":"284","endLine":4,"endColumn":21},{"ruleId":"325","severity":1,"message":"326","line":14,"column":80,"nodeType":"327","messageId":"328","endLine":14,"endColumn":82},{"ruleId":"325","severity":1,"message":"326","line":14,"column":106,"nodeType":"327","messageId":"328","endLine":14,"endColumn":108},{"ruleId":"325","severity":1,"message":"326","line":18,"column":58,"nodeType":"327","messageId":"328","endLine":18,"endColumn":60},{"ruleId":"325","severity":1,"message":"326","line":25,"column":18,"nodeType":"327","messageId":"328","endLine":25,"endColumn":20},{"ruleId":"325","severity":1,"message":"326","line":35,"column":16,"nodeType":"327","messageId":"328","endLine":35,"endColumn":18},{"ruleId":"281","severity":1,"message":"329","line":39,"column":11,"nodeType":"283","messageId":"284","endLine":39,"endColumn":22},"no-unused-vars","'ManageAlbums' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["330"],"no-negated-in-lhs",["331"],"'Link' is defined but never used.","'sessionUser' is assigned a value but never used.","'showMenu' is assigned a value but never used.","'user_id' is assigned a value but never used.","'artist_id' is assigned a value but never used.","'url' is assigned a value but never used.","'songs' is assigned a value but never used.","'getMyAlbums' is defined but never used.","'deleteAlbumSong' is defined but never used.","'getMyPlaylists' is defined but never used.","'removeSongFromPlaylistThunk' is defined but never used.","'hasAlbums' is assigned a value but never used.","'hasPlaylists' is assigned a value but never used.","'NavLink' is defined but never used.","'MenuLibrary' is defined but never used.","'MainPageContent' is defined but never used.","'useSelector' is defined but never used.","'ProfileButton' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'albumDetails' is defined but never used.","'dispatch' is assigned a value but never used.","'sessionUserId' is assigned a value but never used.","'OpenModalMenuItem' is defined but never used.","'DeleteSongModal' is defined but never used.","'checkUserVSOwner' is assigned a value but never used.","'DeletePlaylistModal' is defined but never used.","'fetchAllArtists' is defined but never used.","'logout' is defined but never used.","'copyrightError' is assigned a value but never used.","'errors' is assigned a value but never used.","'getAllLikes' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newPlaylist' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]