[{"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/index.js":"1","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/App.js":"2","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/session.js":"3","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/context/Modal.js":"4","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/index.js":"5","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/likes.js":"6","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/albums.js":"7","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/songs.js":"8","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/artists.js":"9","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/playlists.js":"10","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Navigation/index.js":"11","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/ManageSongs/index.js":"12","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SignupFormPage/index.js":"13","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Albums/index.js":"14","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/UpdateSong/index.js":"15","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/UpdateAlbum/index.js":"16","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/CreateSong/index.js":"17","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/AlbumDetails/index.js":"18","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/PlaylistIndex/index.js":"19","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/LoginFormPage/index.js":"20","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Home/index.js":"21","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SongDetails/index.js":"22","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SongIndex/index.js":"23","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/PlaylistDetails/index.js":"24","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Navigation/ProfileButton.js":"25","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Navigation/OpenModalMenuItem.js":"26","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SongForm/index.js":"27","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/PlaylistIndexItem/index.js":"28","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SongIndexItem/index.js":"29","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/MainPageContent/index.js":"30","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/AlbumForm/index.js":"31","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/DeleteAlbumModal/index.js":"32","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/DeletePlaylistModal/index.js":"33","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/AlbumIndexItem/index.js":"34","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/MenuLibrary/index.js":"35","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/DeleteSongModal/index.js":"36","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SignupFormModal/index.js":"37","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/LoginFormModal/index.js":"38","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/LikeSong/index.js":"39"},{"size":995,"mtime":1705165689125,"results":"40","hashOfConfig":"41"},{"size":2417,"mtime":1706207042213,"results":"42","hashOfConfig":"41"},{"size":2089,"mtime":1705165689126,"results":"43","hashOfConfig":"41"},{"size":1851,"mtime":1705165689125,"results":"44","hashOfConfig":"41"},{"size":932,"mtime":1705994331274,"results":"45","hashOfConfig":"41"},{"size":2399,"mtime":1706209964847,"results":"46","hashOfConfig":"41"},{"size":5011,"mtime":1706156497773,"results":"47","hashOfConfig":"41"},{"size":3459,"mtime":1706155607459,"results":"48","hashOfConfig":"41"},{"size":2370,"mtime":1706155607459,"results":"49","hashOfConfig":"41"},{"size":4642,"mtime":1706155471520,"results":"50","hashOfConfig":"41"},{"size":707,"mtime":1706155471509,"results":"51","hashOfConfig":"41"},{"size":1367,"mtime":1706156497771,"results":"52","hashOfConfig":"41"},{"size":2135,"mtime":1705165689124,"results":"53","hashOfConfig":"41"},{"size":1114,"mtime":1705994331237,"results":"54","hashOfConfig":"41"},{"size":669,"mtime":1705994331272,"results":"55","hashOfConfig":"41"},{"size":682,"mtime":1706155471516,"results":"56","hashOfConfig":"41"},{"size":312,"mtime":1706155607451,"results":"57","hashOfConfig":"41"},{"size":1647,"mtime":1706155471492,"results":"58","hashOfConfig":"41"},{"size":1031,"mtime":1705994331262,"results":"59","hashOfConfig":"41"},{"size":1420,"mtime":1705798042083,"results":"60","hashOfConfig":"41"},{"size":601,"mtime":1706155471500,"results":"61","hashOfConfig":"41"},{"size":2032,"mtime":1706210233081,"results":"62","hashOfConfig":"41"},{"size":972,"mtime":1705994331269,"results":"63","hashOfConfig":"41"},{"size":1681,"mtime":1705994331260,"results":"64","hashOfConfig":"41"},{"size":2604,"mtime":1706155471508,"results":"65","hashOfConfig":"41"},{"size":918,"mtime":1705994331253,"results":"66","hashOfConfig":"41"},{"size":6223,"mtime":1706155607457,"results":"67","hashOfConfig":"41"},{"size":1343,"mtime":1705994331266,"results":"68","hashOfConfig":"41"},{"size":1108,"mtime":1705994331271,"results":"69","hashOfConfig":"41"},{"size":1026,"mtime":1706156497770,"results":"70","hashOfConfig":"41"},{"size":3336,"mtime":1706156497769,"results":"71","hashOfConfig":"41"},{"size":1485,"mtime":1706155471496,"results":"72","hashOfConfig":"41"},{"size":1193,"mtime":1705994331238,"results":"73","hashOfConfig":"41"},{"size":881,"mtime":1705994331234,"results":"74","hashOfConfig":"41"},{"size":1765,"mtime":1706155607453,"results":"75","hashOfConfig":"41"},{"size":1474,"mtime":1706155471497,"results":"76","hashOfConfig":"41"},{"size":1842,"mtime":1705165689123,"results":"77","hashOfConfig":"41"},{"size":1569,"mtime":1705994331241,"results":"78","hashOfConfig":"41"},{"size":1909,"mtime":1706210904030,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1gfj54i",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/index.js",[],["174","175"],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/App.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/session.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/context/Modal.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/likes.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/albums.js",["176"],"// /** Action Type Constants: */\nexport const LOAD_ALBUMS = \"albums/LOAD_ALBUMS\";\nexport const LOAD_ALBUM_DETAILS = \"albums/LOAD_ALBUM_DETAILS\";\nexport const RECEIVE_ALBUM = \"albums/RECEIVE_ALBUM\";\nexport const UPDATE_ALBUM = \"albums/UPDATE_ALBUM\";\nexport const REMOVE_ALBUM = \"albums/REMOVE_ALBUM\";\nexport const RECEIVE_ALBUM_SONG = \"albums/RECEIVE_ALBUM_SONG\";\nexport const REMOVE_ALBUM_SONG = \"albums/REMOVE_ALBUM_SONG\";\n\n// /**  Action Creators: */\nexport const loadAlbums = (albums) => ({\n    type: LOAD_ALBUMS,\n    albums,\n});\n\nexport const loadAlbumDetails = (album) => ({\n    type: LOAD_ALBUM_DETAILS,\n    album,\n});\n\nexport const receiveAlbum = (album) => ({\n    type: RECEIVE_ALBUM,\n    album,\n});\n\nexport const editAlbum = (album) => ({\n    type: UPDATE_ALBUM,\n    album,\n});\n\nexport const removeAlbum = (album) => ({\n    type: REMOVE_ALBUM,\n    album,\n});\n\nexport const receiveAlbumSong = (albumSong) => ({\n    type: RECEIVE_ALBUM_SONG,\n    albumSong,\n});\n\nexport const removeAlbumSong = (albumId, songId) => ({\n    type: REMOVE_ALBUM_SONG,\n    albumId,\n    songId,\n});\n\n// /** Thunk Action Creators: */\nexport const getAllAlbums = () => async (dispatch) => {\n    const res = await fetch(`/api/albums`);\n\n    if (res.ok) {\n        const data = await res.json();\n        // console.log(\"data\", data);\n        dispatch(loadAlbums(data));\n        return data;\n    }\n    return res;\n};\n\nexport const getAlbumDetails = (albumId) => async dispatch => {\n    console.log(\"Fetching album details for albumId:\", albumId);\n    const res = await fetch(`/api/albums/${albumId}`);\n\n    if (res.ok) {\n        const data = await res.json();\n        console.log(\"Received data:\", data);\n        dispatch(loadAlbumDetails(data));\n        return data;\n    }\n    console.log(\"Error fetching album details:\", res.statusText);\n    return res;\n};\n\nexport const getMyAlbums = () => async (dispatch) => {\n    const res = await fetch('/api/albums/current');\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(loadAlbums(data));\n        return data;\n    }\n    return res;\n};\n\nexport const createAlbum = (payload) => async (dispatch) => {\n    const res = await fetch(\"/api/albums\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n    });\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(receiveAlbum(data));\n        return data;\n    }\n    return res;\n};\n\nexport const updateAlbum = (album) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${album.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(album),\n    });\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(editAlbum(data));\n        return data;\n    }\n    return res;\n};\n\nexport const deleteAlbum = (albumId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}`, {\n        method: \"DELETE\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(removeAlbum(albumId));\n        return data;\n    }\n    return res;\n};\n\nexport const createAlbumSong = (albumSong, albumId, songId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}/songs/${songId}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(albumSong),\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(receiveAlbumSong(data));\n        return data;\n    }\n    return res;\n};\n\nexport const deleteAlbumSong = (albumId, songId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}/songs/${songId}`, {\n        method: \"DELETE\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        await dispatch(removeAlbumSong(albumId, songId));\n        return data;\n    }\n    return res;\n};\n\nconst albumsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case LOAD_ALBUMS: {\n            const albumsState = { ...state };\n            action.albums.albums.forEach((album) => {\n                if (!albumsState[album.id]) { albumsState[album.id] = album; }\n            });\n            return albumsState;\n        };\n        case LOAD_ALBUM_DETAILS: {\n            return { ...state, [action.album.id]: action.album };\n        };\n        case RECEIVE_ALBUM:\n            return { ...state, [action.album.id]: action.album };\n        case UPDATE_ALBUM:\n            return { ...state };\n        case REMOVE_ALBUM: {\n            const albumState = { ...state };\n            delete albumState[action.albums];\n            return albumState;\n        };\n        case RECEIVE_ALBUM_SONG: {\n            const albumState = { ...state };\n            return albumState;\n        };\n        case REMOVE_ALBUM_SONG: {\n            const albumState = { ...state };\n            return albumState;\n        };\n        default:\n            return state;\n    }\n};\n\nexport default albumsReducer;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/songs.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/artists.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/store/playlists.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Navigation/index.js",["177","178","179"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport './Navigation.css';\nimport MenuLibrary from '../MenuLibrary';\nimport MainPageContent from '../MainPageContent';\n\nfunction Navigation({ isLoaded }){\n\tconst sessionUser = useSelector(state => state.session.user);\n\n\treturn (\n\t\t<nav>\n\t\t\t{/* <div id=\"LibraryMenu\">\n\t\t\t\t\t<MenuLibrary />\n\t\t\t</div> */}\n\t\t\t<div id=\"loginsignupnavbar\">\n\t\t\t\t{isLoaded && (\n\t\t\t\t\t<ProfileButton user={sessionUser} />\n\t\t\t\t)}\n\t\t\t\t{/* {isLoaded && (\n\t\t\t\t<div id=\"viewallthree\">\n\t\t\t\t\t<MainPageContent />\n\t\t\t\t</div>)} */}\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Navigation;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/ManageSongs/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SignupFormPage/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Albums/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/UpdateSong/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/UpdateAlbum/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/CreateSong/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/AlbumDetails/index.js",["180","181","182","183","184"],"import './AlbumDetails.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlbumDetails} from '../../store/albums';\nimport DeleteAlbumModal from '../DeleteAlbumModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\n\n\nconst AlbumDetails = () => {\n  const dispatch = useDispatch();\n  const { albumId } = useParams();\n  console.log(\"This is albumId:\", albumId)\n  const sessionUser = useSelector(state => state.session.user);\n  const album = useSelector(state => state.albumsReducer[albumId]);\n  console.log(\"this is album:\" ,album)\n  const [isLoading, setIsLoading] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n\n  useEffect(() => {\n    dispatch(getAlbumDetails(albumId)).then(() => setIsLoading(false));\n  }, [dispatch, albumId]);\n  if (isLoading || !album) return (<>Loading...</>);\n  const {user_id, artist_id, title, lyrics, url, duration, release_date} = album;\n\n  const closeMenu = (e) => {\n    if (!ulRef.current?.contains(e.target)) {\n      setShowMenu(false);\n    }\n  };\n\n  return (\n    <>\n    <div className='grid-container'>\n      <p className='title'>{title}</p>\n      <p className='lyrics'>{lyrics}</p>\n      <p className='duration'>{duration}</p>\n      <p className='release_date'>{release_date}</p>\n    </div>\n    <button>\n        <OpenModalMenuItem\n          itemText=\"Delete\"\n          onItemClick={closeMenu}\n          modalComponent={<DeleteAlbumModal album = {album}/>}\n        />\n      </button>\n    </>\n  )\n};\n\nexport default AlbumDetails;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/PlaylistIndex/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/LoginFormPage/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Home/index.js",["185","186","187"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from '../Navigation/ProfileButton';\nimport './Home.css';\nimport MenuLibrary from '../MenuLibrary';\nimport MainPageContent from '../MainPageContent';\n\nfunction Home(){\n\n\treturn (\n\t\t<nav>\n\t\t\t<div class=\"homewrapper\">\n                <div class=\"homeitem-1\">\n                    <MenuLibrary />\n                </div>\n                <div class=\"homeitem-2\">\n                    <MainPageContent />\n                </div>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Home;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SongDetails/index.js",["188","189"],"import './SongDetails.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSongDetails } from '../../store/songs';\nimport DeleteSongModal from '../DeleteSongModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport { getAllLikes } from '../../store/likes';\nimport LikeSong from '../LikeSong';\n\nconst SongDetails = () => {\n  const dispatch = useDispatch();\n  const { songId } = useParams();\n  const sessionUser = useSelector(state => state.session.user);\n  const song = useSelector(state => state.songsReducer[songId]);\n  const like = useSelector(state => state.likesReducer.likes);\n  console.log(\"this is song:\", song)\n  console.log(\"this is like:\", like)\n  const [isLoading, setIsLoading] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n\n  useEffect(() => {\n    dispatch(getSongDetails(songId)).then(()=>dispatch(getAllLikes(songId))).then(() => setIsLoading(false));\n  }, [dispatch, songId]);\n  if (isLoading || !song) return (<>Loading...</>);\n  if (isLoading || !song) return (<>Loading...</>);\n  const { user_id, artist_id, title, lyrics, url, duration, release_date } = song;\n\n  const closeMenu = (e) => {\n    if (!ulRef.current?.contains(e.target)) {\n      setShowMenu(false);\n    }\n  };\n\n  return (\n    <>\n      <div className='grid-container'>\n        <img id =\"songdetialimage\" src={url} alt=\"songdetailimage\"/>\n        <p className='title'>{title}</p>\n        <p className='lyrics'>{lyrics}</p>\n        <p className='duration'>{duration}</p>\n        <p className='release_date'>{release_date}</p>\n      </div>\n      {sessionUser && <LikeSong userId={user_id} songId={songId}/>}\n      <button onClick={closeMenu}>\n        <OpenModalMenuItem\n          itemText=\"Delete\"\n          onItemClick={closeMenu}\n          modalComponent={<DeleteSongModal song={song} />}\n        />\n      </button>\n    </>\n  )\n};\n\nexport default SongDetails;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SongIndex/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/PlaylistDetails/index.js",["190","191","192","193","194","195"],"import './PlaylistDetails.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPlaylistById } from '../../store/playlists';\nimport DeletePlaylistModal from '../DeletePlaylistModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\n\n\nconst PlaylistDetails = () => {\n  const dispatch = useDispatch();\n  const { playlistId } = useParams();\n  const sessionUser = useSelector(state => state.session.user);\n  const playlist = useSelector(state => state.playlistsReducer.currentPlaylist);\n  console.log(\"this is currentplaylist:\", playlist)\n  const [isLoading, setIsLoading] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n  useEffect(() => {\n    dispatch(fetchPlaylistById(playlistId)).then(() => setIsLoading(false));\n  }, [dispatch, playlistId]);\n\n  const closeMenu = (e) => {\n    if (!ulRef.current?.contains(e.target)) {\n      setShowMenu(false);\n    }\n  };\n\n  if (isLoading || !playlist) return (<>Loading...</>);\n  const {user_id, artist_id, title, lyrics, url, duration, release_date, songs} = playlist;\n  return (\n    <>\n    <div className='grid-container'>\n      <p className='title'>{title}</p>\n      <p className='lyrics'>{lyrics}</p>\n      <p className='duration'>{duration}</p>\n      <p className='release_date'>{release_date}</p>\n    </div>\n    <button>\n        <OpenModalMenuItem\n          itemText=\"Delete\"\n          onItemClick={closeMenu}\n          modalComponent={<DeletePlaylistModal playlist={playlist}/>}\n        />\n      </button>\n    </>\n  )\n};\n\nexport default PlaylistDetails;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Navigation/ProfileButton.js",["196"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { logout } from \"../../store/session\";\nimport { Link } from 'react-router-dom';\nimport * as sessionActions from '../../store/session';\nimport OpenModalMenuItem from './OpenModalMenuItem';\nimport LoginFormModal from '../LoginFormModal';\nimport SignupFormModal from '../SignupFormModal';\nimport \"./ProfileButton.css\";\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n\n  const openMenu = (e) => {\n    e.stopPropagation();\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = (e) => {\n      if (!ulRef.current.contains(e.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener('click', closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const closeMenu = () => setShowMenu(false);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n    closeMenu();\n  };\n\n  const ulClassName = \"profile-dropdown\" + (showMenu ? \"\" : \" hidden\");\n\n  return (\n    <div id=\"profileNavButtonMenuItem\">\n      {(!user) &&\n        <div id=\"menuitemlogin\">\n          <OpenModalMenuItem\n          itemText=\"Log In\"\n          onItemClick={closeMenu}\n          modalComponent={<LoginFormModal />}\n          />\n        </div>\n      }\n      {(!user) &&\n        <div id=\"menuitemsignup\">\n        <OpenModalMenuItem\n        itemText=\"Sign Up\"\n        onItemClick={closeMenu}\n        modalComponent={<SignupFormModal />}\n        />\n        </div>\n      }\n      <div id=\"iconandcloseopenmenu\">\n      {user && !showMenu &&\n        <div id=\"openMenuNavButton\" onClick={openMenu}>\n          <i className=\"fas fa-user-circle fa-2x\"/>\n          <i className=\"fas fa-sort-down fa-2x\"></i>\n        </div>}\n      {user && showMenu &&\n        <div id=\"closeMenuNavButton\" onClick={closeMenu}>\n        <i className=\"fas fa-user-circle fa-2x\"/>\n        <i className=\"fas fa-sort-up fa-2x\"></i>\n        </div>}\n      <section className={ulClassName} ref={ulRef}>\n        {user ? (\n          <div id=\"menuwithlogout\">\n            <div>Hello, {user.firstName}</div>\n            <div>{user.email}</div>\n            <div>\n              <hr/>\n              <div onClick={logout}><Link id=\"menulogout\" to=\"/\" >Log Out</Link></div>\n            </div>\n          </div>\n        ) : null}\n      </section>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileButton;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/Navigation/OpenModalMenuItem.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SongForm/index.js",["197","198","199"],"import './SongForm.css';\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSong, updateSong } from '../../store/songs';\nimport { fetchAllArtists } from '../../store/artists';\n\nconst SongForm = ({ song, formType }) => {\n  const dispatch = useDispatch();\n  // const [isLoaded, setIsLoaded] = useState(false);\n  // const artists = useSelector((state) => state.artistsReducer);\n  const currentUser = useSelector((state) => state.session);\n  // useEffect(()=>{\n  //   dispatch(fetchAllArtists()).then(()=>setIsLoaded(true))\n  // }, [dispatch, formType]);\n  const history = useHistory();\n  const [artistName, setArtistName] = useState(song?.artist_name);\n  const [title, setTitle] = useState(song?.title);\n  const [lyrics, setLyrics] = useState(song?.lyrics);\n  const [url, setUrl] = useState(song?.url);\n  const [duration, setDuration] = useState(song?.duration);\n  const [releaseDate, setReleaseDate] = useState(song?.release_date);\n  const [songFile, setSongFile] = useState(null);\n  const [songLoading, setSongLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const formTitle = formType === 'Create Song' ? 'Create a New Song' : 'Update Your Song';\n\n  // if(artistId)\n  // const artist = Object.values(artists).filter((curr, index)=> (curr.name == 'Charlie Puth'))\n  // let songArtist;\n  // if(artistId){\n  //   songArtist = Object.values(artists)[0][artistId]\n  // }\n  // const [artistName, setArtistName] = useState(songArtist?.name);\n  // console.log(\"this is artistName\", artistName)\n  // console.log(\"this is artists\", artists)\n  // console.log(\"this is artists index\", Object.values(artists)[0])\n  // console.log(\"this is artists index\", Object.values(artists)[0][1])\n  // console.log(\"this is artists index\", Object.values(artists)[0][1].name)\n  // if (!isLoaded) {\n  //   return (<div>Loading...</div>);\n  // }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors({});\n    // song = {...song, artistName, title, lyrics, url, duration, releaseDate};\n\n    // console.log(\"this is artistName\", artistName)\n    // if(artistId && artistName){\n    //   dispatch(updateArtist({name:{artistName}}))\n    // }\n\n    // if(!artistId && artistName){\n    //   dispatch(createArtist({name:{artistName}}))\n    //   artistId = Object.values(artists).filter((curr)=> (curr.name == artistName)).id\n    // }\n    // console.log(\"this is artists\", artists)\n  // const artist = Object.values(artists).filter((curr, index)=> (curr.name == 'Charlie Puth'))\n    // console.log(\"artist_id\", artistId)\n    const formData = new FormData();\n    formData.append(\"songFile\", songFile);\n    formData.append(\"artist_name\", artistName);\n    formData.append(\"title\", title);\n    formData.append(\"lyrics\", lyrics);\n    formData.append(\"url\", url);\n    formData.append(\"duration\", duration);\n    formData.append(\"releaseDate\", releaseDate);\n    setSongLoading(true);\n\n    // let newSong;\n    if (formType === 'Update Song') {\n      dispatch(updateSong(formData))\n      .then(history.push(`/songs`))\n      .catch(async (res) => {\n        const data = await res;\n        if (data && data.errors) {\n          setErrors(data.errors);\n        }\n      });\n    } else if (formType === 'Create Song') {\n      dispatch(createSong(formData))\n      .then(history.push(`/songs`))\n      .catch(async (res) => {\n        const data = await res;\n        if (data && data.errors) {\n          setErrors(data.errors);\n        }\n      });\n      // .catch(async (res) => {\n      //   const data = await res.json();\n      //   if (data && data.errors) {\n      //     setErrors(data.errors);\n      //   }\n      // });\n    }\n  };\n  const artistNameError = errors.artistName ? 'Artist Name: ' + errors.artistName : null;\n  const titleError = errors.title ? 'Title: ' + errors.title : null;\n  const lyricsError = errors.lyrics ? 'Lyrics: ' + errors.lyrics : null;\n  const urlError = errors.url ? 'URL: ' + errors.url : null;\n  const durationError = errors.duration ? 'Duration: ' + errors.duration : null;\n  const releaseDateError = errors.releaseDate ? 'Release Date: ' + errors.releaseDate : null;\n\n  // if(isLoaded){\n  return (\n    <div className='body'>\n    <form className='form' onSubmit={handleSubmit} encType=\"multipart/form-data\">\n      <p className='formHeading'>{formTitle}</p>\n      <div className='errors'>\n        <ul >{artistNameError}</ul>\n        <ul>{titleError}</ul>\n        <ul>{lyricsError}</ul>\n        <ul>{urlError}</ul>\n        <ul>{durationError}</ul>\n        <ul>{releaseDateError}</ul>\n      </div>\n      <p className='formSubheading'>Want to share your song?</p>\n      <p className='nomal'>Some details about your song.</p>\n      <div className='formNormal'>\n      <label>\n        Artist Name<br/>\n        <input type=\"text\" value={artistName} placeholder=\"Artist Name\" onChange={(e) => setArtistName(e.target.value)}/><br/>\n      </label>\n      <label>\n        Song Title<br/>\n        <input type=\"text\" value={title} placeholder=\"Song Title\" onChange={(e) => setTitle(e.target.value)}/><br/>\n      </label>\n      <label>\n        Lyrics<br/>\n        <input type=\"text\" value={lyrics} placeholder=\"Lyrics\" onChange={(e) => setLyrics(e.target.value)}/><br/>\n      </label>\n      <label>\n        Song Image URL<br/>\n        <input type=\"text\" value={url} placeholder=\"Song Image URL\" onChange={(e) => setUrl(e.target.value)}/><br/>\n      </label>\n      <label>\n        Song Duration<br/>\n        <input type=\"text\" value={duration} placeholder=\"Song Duration\" onChange={(e) => setDuration(e.target.value)}/>\n      </label>\n      <label>\n        Release Date<br/>\n        <input type=\"text\" value={releaseDate} placeholder=\"Release Date\" onChange={(e) => setReleaseDate(e.target.value)}/><br/>\n      </label>\n      <label>\n        Upload Song File<br/>\n        <input type=\"file\" accept=\"audio/*\" placeholder=\"Upload Song File\" onChange={(e) => setSongFile(e.target.files[0])}/><br/>\n      </label>\n      </div>\n      <button className='submitFormButton' type=\"submit\">{formType}</button>\n      {(songLoading)&& <p>Loading...</p>}\n    </form>\n    </div>\n  );\n};\n\n// }\n\nexport default SongForm;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/PlaylistIndexItem/index.js",["200","201","202","203"],"import './PlaylistIndexItem.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport DeletePlaylistModal from '../DeletePlaylistModal/index';\n\nconst PlaylistItem = ({ playlist }) => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const {id, title, user_id, url} = playlist;\n  const sessionUserId = sessionUser ? sessionUser.id : null;\n  const checkUserVSOwner = sessionUserId === user_id ? true : false;\n  return (\n    // <div className='playlistTile'>\n    //   <span className='tooltip'>{title}</span>\n    //   <Link to={`/playlists/${playlist.id}`}><p className='title'>{title}</p></Link>\n    //   {checkUserVSOwner && <OpenModalMenuItem itemText='Delete' modalComponent={<DeletePlaylistModal playlist={playlist}/>}/>}\n    // </div>\n    <div className='playlistTile'>\n    <Link id=\"playlistlinkwithtext\" to={`/playlists/${playlist.id}`}  key={`${id}`}>\n      {/* <hr /> */}\n      <div id=\"playlistgrid1\">\n          <div id=\"playlistitem1\">\n              <img id =\"playlistImage\" src={url} alt=\"playlist\"/>\n          </div>\n          <div id=\"playlistitem2\">\n              {title}\n          </div>\n      </div>\n    </Link>\n  </div>\n  );\n};\n\nexport default PlaylistItem;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SongIndexItem/index.js",["204","205","206","207"],"import './SongIndexItem.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport DeleteSongModal from '../DeleteSongModal/index';\n\nconst SongItem = ({ song }) => {\n  console.log(\"Song in SongIndexItem:\", song);\n  console.log(\"Title:\", song.title);\n  console.log(\"User ID:\", song.user_id);\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const {id, title, url, user_id} = song;\n  const sessionUserId = sessionUser ? sessionUser.id : null;\n  const checkUserVSOwner = sessionUserId === user_id ? true : false;\n  return (\n    <div className='songTile'>\n      <Link id=\"songlinkwithtext\" to={`/songs/${song.id}`}  key={`${id}`}>\n        {/* <hr /> */}\n        <div id=\"songgrid1\">\n            <div id=\"songitem1\">\n                <img id =\"songImage\" src={url} alt=\"song\"/>\n            </div>\n            <div id=\"songitem2\">\n                {title}\n            </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default SongItem;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/MainPageContent/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/AlbumForm/index.js",["208"],"import './AlbumForm.css';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createAlbum, updateAlbum } from '../../store/albums';\n\nconst AlbumForm = ({ album, formType }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState(album?.title);\n  const [url, setUrl] = useState(album?.url);\n  const [releaseDate, setReleaseDate] = useState(album?.release_date);\n  const [copyright, setCopyright] = useState(album?.copyright || '');\n  const [errors, setErrors] = useState({});\n\n  const formTitle = formType === 'Create Album' ? 'Create a New Album' : 'Update Your Album';\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors({});\n\n    album = { ...album, title, releaseDate, url, copyright };\n\n    if (formType === 'Update Album') {\n      dispatch(updateAlbum(album))\n        .then((newAlbum) => history.push(`/albums/${newAlbum.id}`))\n        .catch(async (res) => {\n          const data = await res.json();\n          if (data && data.errors) {\n            setErrors(data.errors);\n          }\n        });\n    } else if (formType === 'Create Album') {\n      dispatch(createAlbum(album))\n        .then((newAlbum) => history.push(`/albums/${newAlbum.id}`))\n        .catch(async (res) => {\n          const data = await res.json();\n          if (data && data.errors) {\n            setErrors(data.errors);\n          }\n        });\n    }\n  };\n\n  const titleError = errors.title ? 'Title: ' + errors.title : null;\n  const urlError = errors.url ? 'URL: ' + errors.url : null;\n  const durationError = errors.duration ? 'Duration: ' + errors.duration : null;\n  const releaseDateError = errors.releaseDate ? 'Release Date: ' + errors.releaseDate : null;\n  const copyrightError = errors.copyright ? 'Copyright: ' + errors.copyright : null;\n\n  return (\n    <div className='body'>\n      <form className='form' onSubmit={handleSubmit}>\n        <p className='formHeading'>{formTitle}</p>\n        <div className='errors'>\n          <ul>{titleError}</ul>\n          <ul>{urlError}</ul>\n          <ul>{durationError}</ul>\n          <ul>{releaseDateError}</ul>\n        </div>\n        <p className='formSubheading'>Want to share your album?</p>\n        <p className='nomal'>Some details about your album.</p>\n        <div className='formNormal'>\n          <label>\n            Album Title<br />\n            <input type=\"text\" value={title} placeholder=\"Album Title\" onChange={(e) => setTitle(e.target.value)} /><br />\n          </label>\n          <label>\n            Album Image URL<br />\n            <input type=\"text\" value={url} placeholder=\"Album Image URL\" onChange={(e) => setUrl(e.target.value)} /><br />\n          </label>\n          <label>\n            Release Date<br />\n            <input type=\"text\" value={releaseDate} placeholder=\"Release Date\" onChange={(e) => setReleaseDate(e.target.value)} /><br />\n          </label>\n          <label>\n            Copyright<br />\n            <input type=\"text\" value={copyright} placeholder=\"Copyright\" onChange={(e) => setCopyright(e.target.value)} /><br /> {/* Add if needed */}\n          </label>\n        </div>\n        <button className='submitFormButton' type=\"submit\">{formType}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AlbumForm;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/DeleteAlbumModal/index.js",["209"],"import './DeleteAlbum.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deleteAlbum } from '../../store/albums';\nimport { useHistory } from 'react-router-dom';\n\nconst DeleteAlbumModal = ({album}) => {\n    const albumId = album.id;\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const {closeModal} = useModal();\n    const history = useHistory();\n\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        try {\n            await dispatch(deleteAlbum(albumId));\n            closeModal();\n            history.push('/albums');\n        } catch (error) {\n            console.error('Error deleting album:', error);\n\n            try {\n                const data = await error.json();\n                if (data && data.errors) {\n                    setErrors(data.errors);\n                }\n            } catch (jsonError) {\n                console.error('Error parsing JSON:', jsonError);\n            }\n        }\n    };\n    return (\n        <div>\n            <p className='heading'>Confirm Delete</p>\n            <p className='subheading'>Are you sure you want to remove this album?</p>\n            <button className='deleteAlbumYes' onClick={handleDelete}>Yes - Delete Album</button><br/>\n            <button className='deleteAlbumNo' onClick={closeModal}>No - Keep Album</button>\n        </div>\n    );\n}\n\nexport default DeleteAlbumModal;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/DeletePlaylistModal/index.js",["210"],"import './DeletePlaylist.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deletePlaylistThunk } from '../../store/playlists';\n\nconst DeletePlaylistModal = ({playlist}) => {\n    const playlistId = playlist.id;\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const {closeModal} = useModal();\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        dispatch(deletePlaylistThunk(playlistId))\n        .then(closeModal)\n        .catch(async (res) => {\n            const data = await res.json();\n            if (data && data.errors) {\n              setErrors(data.errors);\n            }\n        });\n    };\n    return (\n        <div>\n            <p className='heading'>Confirm Delete</p>\n            <p className='subheading'>Are you sure you want to remove this playlist?</p>\n            <button className='deletePlaylistYes' onClick={handleDelete}>Yes - Delete Playlist</button><br/>\n            <button className='deletePlaylistNo' onClick={closeModal}>No - Keep Playlist</button>\n        </div>\n    );\n}\n\nexport default DeletePlaylistModal;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/AlbumIndexItem/index.js",["211","212","213","214","215"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { albumDetails } from \"../../store/albums\";\nimport { Link } from 'react-router-dom';\nimport \"./AlbumIndexItem.css\";\nconst AlbumIndexItem = ({ album }) => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const { id, title, url} = album;\n    const sessionUserId = sessionUser ? sessionUser.id : null;\n\n    return (\n        <Link id=\"albumlinkwithtext\" to={`/albums/${id}`} key={`${id}`}>\n            <div id=\"albumgrid1\">\n                <div id=\"albumitem1\">\n                    <img id=\"albumImage\" src={url} alt=\"album\" />\n                </div>\n                <div id=\"albumitem2\">\n                    {title}\n                </div>\n            </div>\n        </Link>\n\n\n    );\n}\n\nexport default AlbumIndexItem;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/MenuLibrary/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/DeleteSongModal/index.js",["216"],"import './DeleteSong.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deleteSong } from '../../store/songs';\nimport { useHistory } from 'react-router-dom';\n\nconst DeleteSongModal = ({ song }) => {\n    const songId = song.id;\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const { closeModal } = useModal();\n    const history = useHistory();\n\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        try {\n            await dispatch(deleteSong(songId));\n            closeModal();\n            history.push('/songs');\n        } catch (error) {\n            console.error('Error deleting song:', error);\n\n            try {\n                const data = await error.json();\n                if (data && data.errors) {\n                    setErrors(data.errors);\n                }\n            } catch (jsonError) {\n                console.error('Error parsing JSON:', jsonError);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <p className='heading'>Confirm Delete</p>\n            <p className='subheading'>Are you sure you want to remove this song?</p>\n            <button className='deleteSongYes' onClick={handleDelete}>Yes - Delete Song</button><br />\n            <button className='deleteSongNo' onClick={closeModal}>No - Keep Song</button>\n        </div>\n    );\n}\n\nexport default DeleteSongModal;\n","/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/SignupFormModal/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/LoginFormModal/index.js",[],"/Users/xushun/Desktop/AppAcademy/groupproject/GroupProjectSpotify/react-app/src/components/LikeSong/index.js",["217","218","219","220","221"],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":162,"column":34,"nodeType":"228","messageId":"229","endLine":164,"endColumn":10},{"ruleId":"230","severity":1,"message":"231","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":17},{"ruleId":"230","severity":1,"message":"234","line":6,"column":8,"nodeType":"232","messageId":"233","endLine":6,"endColumn":19},{"ruleId":"230","severity":1,"message":"235","line":7,"column":8,"nodeType":"232","messageId":"233","endLine":7,"endColumn":23},{"ruleId":"230","severity":1,"message":"236","line":14,"column":9,"nodeType":"232","messageId":"233","endLine":14,"endColumn":20},{"ruleId":"230","severity":1,"message":"237","line":18,"column":10,"nodeType":"232","messageId":"233","endLine":18,"endColumn":18},{"ruleId":"230","severity":1,"message":"238","line":25,"column":10,"nodeType":"232","messageId":"233","endLine":25,"endColumn":17},{"ruleId":"230","severity":1,"message":"239","line":25,"column":19,"nodeType":"232","messageId":"233","endLine":25,"endColumn":28},{"ruleId":"230","severity":1,"message":"240","line":25,"column":45,"nodeType":"232","messageId":"233","endLine":25,"endColumn":48},{"ruleId":"230","severity":1,"message":"231","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":17},{"ruleId":"230","severity":1,"message":"241","line":3,"column":10,"nodeType":"232","messageId":"233","endLine":3,"endColumn":21},{"ruleId":"230","severity":1,"message":"242","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":21},{"ruleId":"230","severity":1,"message":"237","line":20,"column":10,"nodeType":"232","messageId":"233","endLine":20,"endColumn":18},{"ruleId":"230","severity":1,"message":"239","line":28,"column":20,"nodeType":"232","messageId":"233","endLine":28,"endColumn":29},{"ruleId":"230","severity":1,"message":"236","line":13,"column":9,"nodeType":"232","messageId":"233","endLine":13,"endColumn":20},{"ruleId":"230","severity":1,"message":"237","line":17,"column":10,"nodeType":"232","messageId":"233","endLine":17,"endColumn":18},{"ruleId":"230","severity":1,"message":"238","line":30,"column":10,"nodeType":"232","messageId":"233","endLine":30,"endColumn":17},{"ruleId":"230","severity":1,"message":"239","line":30,"column":19,"nodeType":"232","messageId":"233","endLine":30,"endColumn":28},{"ruleId":"230","severity":1,"message":"240","line":30,"column":45,"nodeType":"232","messageId":"233","endLine":30,"endColumn":48},{"ruleId":"230","severity":1,"message":"243","line":30,"column":74,"nodeType":"232","messageId":"233","endLine":30,"endColumn":79},{"ruleId":"230","severity":1,"message":"244","line":3,"column":10,"nodeType":"232","messageId":"233","endLine":3,"endColumn":16},{"ruleId":"230","severity":1,"message":"245","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":19},{"ruleId":"230","severity":1,"message":"246","line":6,"column":10,"nodeType":"232","messageId":"233","endLine":6,"endColumn":25},{"ruleId":"230","severity":1,"message":"247","line":12,"column":9,"nodeType":"232","messageId":"233","endLine":12,"endColumn":20},{"ruleId":"230","severity":1,"message":"248","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":25},{"ruleId":"230","severity":1,"message":"249","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":27},{"ruleId":"230","severity":1,"message":"250","line":8,"column":9,"nodeType":"232","messageId":"233","endLine":8,"endColumn":17},{"ruleId":"230","severity":1,"message":"251","line":12,"column":9,"nodeType":"232","messageId":"233","endLine":12,"endColumn":25},{"ruleId":"230","severity":1,"message":"248","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":25},{"ruleId":"230","severity":1,"message":"252","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":23},{"ruleId":"230","severity":1,"message":"250","line":11,"column":9,"nodeType":"232","messageId":"233","endLine":11,"endColumn":17},{"ruleId":"230","severity":1,"message":"251","line":15,"column":9,"nodeType":"232","messageId":"233","endLine":15,"endColumn":25},{"ruleId":"230","severity":1,"message":"253","line":49,"column":9,"nodeType":"232","messageId":"233","endLine":49,"endColumn":23},{"ruleId":"230","severity":1,"message":"254","line":11,"column":12,"nodeType":"232","messageId":"233","endLine":11,"endColumn":18},{"ruleId":"230","severity":1,"message":"254","line":10,"column":12,"nodeType":"232","messageId":"233","endLine":10,"endColumn":18},{"ruleId":"230","severity":1,"message":"245","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":19},{"ruleId":"230","severity":1,"message":"255","line":1,"column":21,"nodeType":"232","messageId":"233","endLine":1,"endColumn":29},{"ruleId":"230","severity":1,"message":"256","line":3,"column":10,"nodeType":"232","messageId":"233","endLine":3,"endColumn":22},{"ruleId":"230","severity":1,"message":"250","line":7,"column":11,"nodeType":"232","messageId":"233","endLine":7,"endColumn":19},{"ruleId":"230","severity":1,"message":"257","line":10,"column":11,"nodeType":"232","messageId":"233","endLine":10,"endColumn":24},{"ruleId":"230","severity":1,"message":"254","line":11,"column":12,"nodeType":"232","messageId":"233","endLine":11,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":14,"column":80,"nodeType":"260","messageId":"261","endLine":14,"endColumn":82},{"ruleId":"258","severity":1,"message":"259","line":14,"column":106,"nodeType":"260","messageId":"261","endLine":14,"endColumn":108},{"ruleId":"258","severity":1,"message":"259","line":22,"column":58,"nodeType":"260","messageId":"261","endLine":22,"endColumn":60},{"ruleId":"258","severity":1,"message":"259","line":29,"column":16,"nodeType":"260","messageId":"261","endLine":29,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":34,"column":16,"nodeType":"260","messageId":"261","endLine":34,"endColumn":18},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'MenuLibrary' is defined but never used.","'MainPageContent' is defined but never used.","'sessionUser' is assigned a value but never used.","'showMenu' is assigned a value but never used.","'user_id' is assigned a value but never used.","'artist_id' is assigned a value but never used.","'url' is assigned a value but never used.","'useSelector' is defined but never used.","'ProfileButton' is defined but never used.","'songs' is assigned a value but never used.","'logout' is defined but never used.","'useEffect' is defined but never used.","'fetchAllArtists' is defined but never used.","'currentUser' is assigned a value but never used.","'OpenModalMenuItem' is defined but never used.","'DeletePlaylistModal' is defined but never used.","'dispatch' is assigned a value but never used.","'checkUserVSOwner' is assigned a value but never used.","'DeleteSongModal' is defined but never used.","'copyrightError' is assigned a value but never used.","'errors' is assigned a value but never used.","'useState' is defined but never used.","'albumDetails' is defined but never used.","'sessionUserId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]