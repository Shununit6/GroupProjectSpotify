{"version":3,"sources":["context/Modal.js","store/session.js","store/songs.js","store/albums.js","store/likes.js","store/playlists.js","store/artists.js","store/index.js","components/Navigation/OpenModalMenuItem.js","components/LoginFormModal/index.js","components/SignupFormModal/index.js","components/Navigation/ProfileButton.js","components/Navigation/index.js","components/MenuLibrary/index.js","components/SongForm/index.js","components/CreateSong/index.js","components/UpdateSong/index.js","components/SongIndexItem/index.js","components/ManageSongs/index.js","components/AlbumIndexItem/index.js","components/ManageAlbums/index.js","components/PlaylistIndexItem/index.js","components/ManagePlaylists/index.js","components/SongIndex/index.js","components/DeleteSongModal/index.js","components/AddSongToAlbumModal/index.js","components/AddSongToPlaylistModal/index.js","components/RemoveSongFromAlbumModal/index.js","components/RemoveSongFromPlaylistModal/index.js","components/LikeSong/index.js","components/SongDetails/index.js","components/Albums/index.js","components/DeleteAlbumModal/index.js","components/AlbumDetails/index.js","components/AlbumForm/index.js","components/UpdateAlbum/index.js","components/CreateAlbum/index.js","components/PlaylistIndex/index.js","components/PlaylistDetails/index.js","components/MainPageContent/index.js","components/Home/index.js","components/PlaylistForm/index.js","components/UpdatePlaylist/index.js","components/CreatePlaylist/index.js","App.js","index.js"],"names":["ModalContext","React","createContext","ModalProvider","_ref","children","modalRef","useRef","modalContent","setModalContent","useState","onModalClose","setOnModalClose","contextValue","closeModal","createElement","Fragment","Provider","value","ref","Modal","useContext","current","ReactDOM","createPortal","id","onClick","useModal","SET_USER","setUser","user","type","payload","initialState","login","email","password","async","response","fetch","method","headers","body","JSON","stringify","ok","data","json","dispatch","status","errors","logout","loadSongs","songs","receiveSong","song","getSongDetails","songId","res","songsReducer","state","arguments","length","undefined","action","console","error","newState","loadAlbums","albums","getAlbumDetails","albumId","album","getMyAlbums","albumsReducer","albumsState","forEach","albumState","getAllLikes","likes","loadLikes","getSongLikes","loadSongLikes","likesReducer","likesState","like","likeState","getAllPlaylists","playlists","fetchPlaylistById","playlistId","playlist","getMyPlaylists","playlistsReducer","currPlaylist","currentPlaylist","message","deletedPlaylist","updatedPlaylists","fetchAllArtists","artists","artistsReducer","currArtist","artistsState","artist","currentArtist","rootReducer","combineReducers","session","enhancer","applyMiddleware","thunk","configureStore","preloadedState","createStore","OpenModalMenuItem","modalComponent","itemText","onItemClick","className","LoginFormModal","useDispatch","setEmail","setPassword","setErrors","onSubmit","e","preventDefault","map","idx","key","onChange","target","minLength","required","disabled","Link","to","SignupFormModal","username","setUsername","confirmPassword","setConfirmPassword","signUp","ProfileButton","showMenu","setShowMenu","ulRef","useEffect","closeMenu","contains","document","addEventListener","removeEventListener","ulClassName","stopPropagation","sessionActions","Navigation","isLoaded","sessionUser","useSelector","MenuLibrary","NavLink","SongForm","formType","history","useHistory","artistName","setArtistName","artist_name","title","setTitle","lyrics","setLyrics","url","setUrl","duration","setDuration","release_date","setReleaseDate","song_file","setSongFile","log","songLoading","setSongLoading","formTitle","validateForm","newErrors","String","trim","URL","isValidUrl","isNaN","Number","Object","keys","artistNameError","titleError","lyricsError","urlError","durationError","releaseDateError","songFileError","formData","FormData","append","updateSong","post","push","TypeError","encType","placeholder","accept","files","CreateSong","UpdateSong","useParams","allArtists","curr_artist","_Object$values$filter","then","values","filter","curr","artist_id","name","SongIndexItem","src","alt","ManageSongs","isLoading","setIsLoading","songsByUser","user_id","hasSongs","AlbumIndexItem","ManageAlbums","albumsByUser","hasAlbums","PlaylistItem","ManagePlaylists","playlistsByUser","hasPlaylists","PlaylistIndexItem","SongIndex","num","_state$songsReducer","index","slice","DeleteSongModal","removeSong","deleteSong","jsonError","AddSongToAlbumModal","handleAddSong","albumTitle","createAlbumSong","albumSong","window","confirm","some","s","isSongInAlbum","AddSongToPlaylistModal","playlistTitle","addSongToPlaylistThunk","isSongInPlaylist","RemoveSongFromAlbumModal","handleDelete","find","deleteAlbumSong","removeAlbumSong","alert","RemoveSongFromPlaylistModal","handleRemoveSong","removeSongFromPlaylistThunk","LikeSong","userId","parseInt","alllikes","numofl","song_id","currLike","isliked","setIsLiked","handleClick","likeId","deleteLike","createLike","SongDetails","song_curr_artist","sessionUserId","checkUserVSOwner","_ulRef$current","formattedDuration","totalSec","sec","Math","floor","convertDuration","handleEditClick","Albums","setIsLoaded","DeleteAlbumModal","deleteAlbum","AlbumDetails","copyright","ownsAlbum","getArtistName","arr","updated_at","AlbumForm","_album","_album2","_album3","_album4","_album5","albumuserId","setCopyright","validationErrors","setValidationErrors","hasSubmitted","setHasSubmitted","newAlbum","editAlbum","updateAlbum","UpdateAlbum","CreateAlbum","PlaylistIndex","PlaylistDetails","description","ownsPlaylist","MainPageContent","Home","PlaylistForm","_playlist","_playlist2","_playlist3","setDescription","isFormValid","newPlaylist","editPlaylist","updatePlaylist","contentType","get","includes","UpdatePlaylist","_state$playlistsReduc","CreatePlaylist","App","Switch","Route","exact","path","component","store","Root","BrowserRouter","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6be719d2.chunk.js","sourcesContent":["import React, { useRef, useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n\nexport function ModalProvider({ children }) {\n  const modalRef = useRef();\n  const [modalContent, setModalContent] = useState(null);\n  // callback function that will be called when modal is closing\n  const [onModalClose, setOnModalClose] = useState(null);\n\n  const closeModal = () => {\n    setModalContent(null); // clear the modal contents\n    // If callback function is truthy, call the callback function and reset it\n    // to null:\n    if (typeof onModalClose === 'function') {\n      setOnModalClose(null);\n      onModalClose();\n    }\n  };\n\n  const contextValue = {\n    modalRef, // reference to modal div\n    modalContent, // React component to render inside modal\n    setModalContent, // function to set the React component to render inside modal\n    setOnModalClose, // function to set the callback function called when modal is closing\n    closeModal // function to close the modal\n  };\n\n  return (\n    <>\n      <ModalContext.Provider value={contextValue}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n}\n\nexport function Modal() {\n  const { modalRef, modalContent, closeModal } = useContext(ModalContext);\n  // If there is no div referenced by the modalRef or modalContent is not a\n  // truthy value, render nothing:\n  if (!modalRef || !modalRef.current || !modalContent) return null;\n\n  // Render the following component to the div referenced by the modalRef\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal-background\" onClick={closeModal} />\n      <div id=\"modal-content\">\n        {modalContent}\n      </div>\n    </div>,\n    modalRef.current\n  );\n}\n\nexport const useModal = () => useContext(ModalContext);","// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\n\nconst setUser = (user) => ({\n\ttype: SET_USER,\n\tpayload: user,\n});\n\nconst removeUser = () => ({\n\ttype: REMOVE_USER,\n});\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch(setUser(data));\n\t}\n};\n\nexport const login = (email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/login\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport const logout = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/logout\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\n\tif (response.ok) {\n\t\tdispatch(removeUser());\n\t}\n};\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/signup\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport default function reducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\treturn { user: action.payload };\n\t\tcase REMOVE_USER:\n\t\t\treturn { user: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","export const LOAD_SONGS = 'songs/LOAD_SONGS';\nexport const RECEIVE_SONG = 'songs/RECEIVE_SONG';\nexport const UPDATE_SONG = 'songs/UPDATE_SONG';\nexport const REMOVE_SONG = 'songs/REMOVE_SONG';\n\nexport const loadSongs = (songs) => ({\n  type: LOAD_SONGS,\n  songs,\n});\n\nexport const receiveSong = (song) => ({\n  type: RECEIVE_SONG,\n  song,\n});\nexport const editSong = (song) => ({\n  type: UPDATE_SONG,\n  song,\n});\nexport const removeSong = (songId) => ({\n  type: REMOVE_SONG,\n  songId,\n});\n\nexport const getAllSongs = () => async (dispatch) => {\n  const res = await fetch('/api/songs');\n  // console.log(\"this is res:\", res)\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(loadSongs(data));\n    return data;\n  }\n  return res;\n};\n\nexport const getMySongs = () => async (dispatch) => {\n  const res = await fetch('/api/songs/current');\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(loadSongs(data));\n    return data;\n  }\n  return res;\n};\n\nexport const getSongDetails = (songId) => async (dispatch) => {\n  // console.log(\"were here 1!!!!\")\n  const res = await fetch(`/api/songs/${songId}`);\n  // console.log(\"were here 2!!!!\")\n  // console.log(\"This is res:\", res)\n  // console.log(\"This is res.body:\", res.body)\n  if (res.ok) {\n    // console.log(\"were here 3!!!!\")\n    const data = await res.json();\n    // console.log(\"were here 4!!!!\")\n    dispatch(receiveSong(data));\n    // console.log(\"were here 5!!!!\")\n    return data;\n  }\n  return res;\n};\n\nexport const createSong = (post) => async (dispatch) => {\n  try {\n    const res = await fetch('/api/songs/new', {\n      method: 'POST',\n      body: post,\n    });\n\n    // Log the entire response\n    // console.log(\"Full response from server:\", res);\n\n    if (res.ok) {\n      const data = await res.json();\n      // console.log(\"Data received from server:\", data);\n\n      // Assuming the server sends the created song directly in the response\n      dispatch(receiveSong(data));\n\n      return data;\n    }\n\n    // console.log(\"There was an error making your post song!\");\n    return null; // Return null or handle the error accordingly\n  } catch (error) {\n    console.error(\"An error occurred:\", error);\n    return null; // Return null or handle the error accordingly\n  }\n};\n\n\nexport const updateSong = (formData, id) => async (dispatch) => {\n  const res = await fetch(`/api/songs/${id}/edit`, {\n    method: 'PUT',\n    headers: {\n\n    },\n    // body: JSON.stringify(payload)\n    body: formData\n  });\n\n  // Log the entire response\n  console.log(\"Full response from server for put:\", res);\n  if (res.ok) {\n    const { data } = await res.json();\n    console.log(\"Data received from server:\", data);\n    dispatch(editSong(data));\n    return data;\n  }\n  // console.log(\"There was an error making your put song!\")\n  return res;\n};\n\nexport const deleteSong = (songId) => async (dispatch) => {\n  const res = await fetch(`/api/songs/${songId}`, {\n    method: 'DELETE'\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(removeSong(songId));\n    return data;\n  }\n  return res;\n};\n\nconst songsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case LOAD_SONGS:\n      return { ...state, ...action.songs }\n    // const songsState = { ...state };\n    // action.songs.forEach((song) => {\n    //   if (!songsState[song.id]) { songsState[song.id] = song; }\n    // });\n    // return songsState;\n    // return state; // Handle the case when action.songs or action.songs.Songs is undefined\n    case RECEIVE_SONG:\n      // console.log(\"Received song action:\", action);\n\n      if (!action.song) {\n        console.error(\"Error: action.song is undefined\");\n        return state;\n      }\n\n      // Check if action.song has the 'id' property\n      if (!action.song.id) {\n        console.error(\"Error: action.song.id is undefined\");\n        return state;\n      }\n\n      // console.log(\"Updating state with received song:\", action.song);\n      return { ...state, [action.song.id]: action.song };\n    case UPDATE_SONG:\n      return { ...state, [action.song.id]: action.song };\n    case REMOVE_SONG:\n      const newState = { ...state };\n      delete newState[action.songId];\n      return newState;\n    default:\n      // console.log(\"State not modified. Action type:\", action.type);\n      return state;\n  }\n};\n\nexport default songsReducer;\n","// /** Action Type Constants: */\nexport const LOAD_ALBUMS = \"albums/LOAD_ALBUMS\";\nexport const LOAD_ALBUM_DETAILS = \"albums/LOAD_ALBUM_DETAILS\";\nexport const RECEIVE_ALBUM = \"albums/RECEIVE_ALBUM\";\nexport const UPDATE_ALBUM = \"albums/UPDATE_ALBUM\";\nexport const REMOVE_ALBUM = \"albums/REMOVE_ALBUM\";\nexport const RECEIVE_ALBUM_SONG = \"albums/RECEIVE_ALBUM_SONG\";\nexport const REMOVE_ALBUM_SONG = \"albums/REMOVE_ALBUM_SONG\";\n\n// /**  Action Creators: */\nexport const loadAlbums = (albums) => ({\n    type: LOAD_ALBUMS,\n    albums,\n});\n\nexport const loadAlbumDetails = (album) => ({\n    type: LOAD_ALBUM_DETAILS,\n    album,\n});\n\nexport const receiveAlbum = (album) => ({\n    type: RECEIVE_ALBUM,\n    album,\n});\n\nexport const editAlbum = (album) => ({\n    type: UPDATE_ALBUM,\n    album,\n});\n\nexport const removeAlbum = (album) => ({\n    type: REMOVE_ALBUM,\n    album,\n});\n\nexport const receiveAlbumSong = (albumSong) => ({\n    type: RECEIVE_ALBUM_SONG,\n    albumSong,\n});\n\nexport const removeAlbumSong = (albumId, songId) => ({\n    type: REMOVE_ALBUM_SONG,\n    albumId,\n    songId,\n});\n\n// /** Thunk Action Creators: */\nexport const getAllAlbums = () => async (dispatch) => {\n    const res = await fetch(`/api/albums`);\n\n    if (res.ok) {\n        const data = await res.json();\n        // console.log(\"data\", data);\n        dispatch(loadAlbums(data));\n        return data;\n    }\n    return res;\n};\n\nexport const getAlbumDetails = (albumId) => async dispatch => {\n    // console.log(\"Fetching album details for albumId:\", albumId);\n    const res = await fetch(`/api/albums/${albumId}`);\n\n    if (res.ok) {\n        const data = await res.json();\n        // console.log(\"Received data:\", data);\n        dispatch(loadAlbumDetails(data));\n        return data;\n    }\n    // console.log(\"Error fetching album details:\", res.statusText);\n    return res;\n};\n\nexport const getMyAlbums = () => async (dispatch) => {\n    const res = await fetch('/api/albums/current');\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(loadAlbums(data));\n        return data;\n    }\n    return res;\n};\n\nexport const createAlbum = (payload) => async (dispatch) => {\n    // console.log(\"We are here\")\n    // console.log(\"this is the payload:\", payload)\n    const res = await fetch(\"/api/albums/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n    });\n    // console.log(\"We are here 2\")\n    // console.log(\"This is the res\", res)\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(receiveAlbum(data));\n        return data;\n    }\n    return res;\n};\n\nexport const updateAlbum = (album) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${album.id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(album),\n    });\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(editAlbum(data));\n        return data;\n    }\n    return res;\n};\n\nexport const deleteAlbum = (albumId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}`, {\n        method: \"DELETE\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(removeAlbum(albumId));\n        return data;\n    }\n    return res;\n};\n\nexport const createAlbumSong = (albumId, songId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}/songs/${songId}`, {\n        method: \"POST\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(receiveAlbumSong(data));\n        return data;\n    }\n    return res;\n};\n\nexport const deleteAlbumSong = (albumId, songId) => async (dispatch) => {\n    const res = await fetch(`/api/albums/${albumId}/songs/${songId}`, {\n        method: \"DELETE\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        await dispatch(removeAlbumSong(albumId, songId));\n        return data;\n    }\n    return res;\n};\n\nconst albumsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case LOAD_ALBUMS: {\n            const albumsState = { ...state };\n            action.albums.albums.forEach((album) => {\n                if (!albumsState[album.id]) { albumsState[album.id] = album; }\n            });\n            return albumsState;\n        };\n        case LOAD_ALBUM_DETAILS: {\n            return { ...state, [action.album.id]: action.album };\n        };\n        case RECEIVE_ALBUM:\n            return { ...state, [action.album.id]: action.album };\n        case UPDATE_ALBUM:\n            return { ...state };\n        case REMOVE_ALBUM: {\n            const albumState = { ...state };\n            delete albumState[action.album];\n            return albumState;\n        };\n        case RECEIVE_ALBUM_SONG: {\n            const albumState = { ...state };\n            return albumState;\n        };\n        case REMOVE_ALBUM_SONG: {\n            const albumState = { ...state };\n            return albumState;\n        };\n        default:\n            return state;\n    }\n};\n\nexport default albumsReducer;\n","// /** Action Type Constants: */\nexport const LOAD_LIKES = \"likes/LOAD_LIKES\";\nexport const LOAD_SONG_LIKES = \"likes/LOAD_SONG_LIKES\";\nexport const RECEIVE_LIKE = \"likes/RECEIVE_LIKE\";\nexport const REMOVE_LIKE = \"likes/REMOVE_LIKE\";\n\n// /**  Action Creators: */\nexport const loadLikes = (likes) => ({\n    type: LOAD_LIKES,\n    likes,\n});\n\nexport const loadSongLikes = (likes) => ({\n    type: LOAD_SONG_LIKES,\n    likes,\n});\n\nexport const receiveLike = (like) => ({\n    type: RECEIVE_LIKE,\n    like,\n});\n\nexport const removeLike = (like) => ({\n    type: REMOVE_LIKE,\n    like,\n});\n\n// /** Thunk Action Creators: */\nexport const getAllLikes = () => async (dispatch) => {\n    const res = await fetch(`/api/songs/likes`);\n\n    if (res.ok) {\n        const data = await res.json();\n        // console.log(\"data\", data);\n        dispatch(loadLikes(data));\n        return data;\n    }\n    return res;\n};\n\nexport const getSongLikes = (songId) => async (dispatch) => {\n    const res = await fetch(`/api/songs/${songId}/likes`);\n\n    if (res.ok) {\n        const data = await res.json();\n        // console.log(\"likedata\", data);\n        dispatch(loadSongLikes(data));\n        return data;\n    }\n    return res;\n};\n\n\nexport const createLike = (payload, songId) => async (dispatch) => {\n    const res = await fetch(`/api/songs/${songId}/likes`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n    });\n    if (res.ok) {\n        const data = await res.json();\n        dispatch(receiveLike(data));\n        return data;\n    }\n    return res;\n};\n\nexport const deleteLike = (likeId, songId) => async (dispatch) => {\n    const res = await fetch(`/api/songs/${songId}/likes`, {\n        method: \"DELETE\",\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        // console.log(\"likeIddletelike\", data);\n        dispatch(removeLike(data.id));\n        return data;\n    }\n    return res;\n};\n\nconst likesReducer = (state = { }, action) => {\n    switch (action.type) {\n        case LOAD_LIKES:\n            const likesState = {...state};\n            // console.log(action)\n            action.likes.likes.forEach((like) => {\n                if(!likesState[like.id]) {likesState[like.id] = like;}\n            });\n            return {...likesState};\n        case LOAD_SONG_LIKES:{\n            return { ...state, ...action.likes };\n        };\n        case RECEIVE_LIKE:\n            // console.log(\"actionhereisthe\", action)\n            // console.log(\"actionhereisthe\", action.like.id)\n            // console.log(\"state\", {...state})\n            return { ...state, [action.like.id]: action.like};\n        case REMOVE_LIKE:{\n            // console.log(\"deleteaction\", action)\n            // console.log(\"deleteactionhereisthe\", action)\n            // console.log(\"deleteactionhereisthe\", action.like.id)\n            const likeState = { ...state, ...action.likes};\n            // console.log(\"state\", likeState)\n            // console.log(\"statelikeState[likes]\", likeState.likes)\n            // console.log(\"statelikeState[likes]\", likeState.likes[0].id)\n            delete likeState[action.like];\n            return likeState;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default likesReducer;\n","const GET_ALL_PLAYLISTS = 'playlists/GET_ALL_PLAYLISTS'\nconst GET_PLAYLIST = 'playlists/GET_PLAYLIST'\nconst CREATE_PLAYLIST = \"playlists/CREATE_PLAYLIST\";\nconst UPDATE_PLAYLIST = \"playlists/UPDATE_PLAYLIST\";\nconst ADD_SONG_TO_PLAYLIST = 'playlists/ADD_SONG_TO_PLAYLIST'\nconst REMOVE_SONG_FROM_PLAYLIST = 'playlists/REMOVE_SONG_FROM_PLAYLIST'\nconst DELETE_PLAYLIST = 'playlists/DELETE_PLAYLIST'\n\n/**Action Creators: */\n\nconst getAllPlaylists = (playlists) => ({\n  type: GET_ALL_PLAYLISTS,\n  playlists,\n})\n\nconst getPlaylist = (playlist) => ({\n  type: GET_PLAYLIST,\n  playlist,\n});\n\nconst createPlaylist = (playlist) => ({\n  type: CREATE_PLAYLIST,\n  playlist,\n});\n\nconst editPlaylist = (playlist) => ({\n  type: UPDATE_PLAYLIST,\n  playlist,\n});\n\nconst addSongToPlaylist = (message) => ({\n  type: ADD_SONG_TO_PLAYLIST,\n  message,\n});\n\nconst removeSongFromPlaylist = (message) => ({\n  type: REMOVE_SONG_FROM_PLAYLIST,\n  message,\n});\n\nconst deletePlaylist = (message) => ({\n  type: DELETE_PLAYLIST,\n  message,\n});\n\n/** Thunk Action Creators: */\nexport const fetchAllPlaylists = () => async (dispatch) => {\n  const response = await fetch('/api/playlists');\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(getAllPlaylists(data.playlists));\n  }\n};\n\nexport const fetchPlaylistById = (playlistId) => async (dispatch) => {\n  const response = await fetch(`/api/playlists/${playlistId}`);\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(getPlaylist(data));\n  }\n};\n\nexport const getMyPlaylists = () => async (dispatch) => {\n  const res = await fetch('/api/playlists/current');\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(getAllPlaylists(data));\n    return data;\n  }\n  return res;\n};\n\nexport const createNewPlaylist = (payload) => async (dispatch) => {\n  // console.log(\"We are here\");\n  // console.log(\"this is the payload:\", payload);\n\n  try {\n    const res = await fetch(\"/api/playlists/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(payload),\n    });\n\n    // console.log(\"We are here 2\");\n    // console.log(\"This is the res\", res);\n\n    if (res.ok) {\n      // Assuming the response is in JSON format\n      const data = await res.json();\n\n      if (data.playlist) {\n        dispatch(createPlaylist(data.playlist));\n        return data;\n      } else {\n        console.error(\"Invalid playlist data in the response:\", data);\n        return res; // You might want to handle this case differently\n      }\n    } else {\n      // Handle non-OK response\n      console.error(\"Server response is not OK:\", res);\n      return res; // You might want to handle this case differently\n    }\n  } catch (error) {\n    // Handle any other errors\n    console.error(\"Error:\", error);\n    return error; // You might want to handle this case differently\n  }\n};\n\n\nexport const updatePlaylist = (playlist) => async (dispatch) => {\n  const res = await fetch(`/api/playlists/${playlist.id}/edit`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(playlist),\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(editPlaylist(data.playlist));\n    return data;\n  }\n  return res;\n};\n\nexport const addSongToPlaylistThunk = (playlistId, songId) => async (dispatch) => {\n  const response = await fetch(`/api/playlists/${playlistId}/songs/${songId}`, {\n    method: \"POST\",\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(addSongToPlaylist(data));\n    return data;\n  }\n  return response;\n};\n\nexport const removeSongFromPlaylistThunk = (playlistId, songId) => async (dispatch) => {\n  const response = await fetch(`/api/playlists/${playlistId}/songs/${songId}`, {\n    method: \"DELETE\",\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(removeSongFromPlaylist(data));\n    return data;\n  }\n  return response;\n};\n\nexport const deletePlaylistThunk = (playlistId) => async (dispatch) => {\n  const response = await fetch(`/api/playlists/${playlistId}`, {\n    method: \"DELETE\",\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(deletePlaylist(data));\n    return data;\n  }\n  return response;\n};\n\nconst playlistsReducer = (state = { playlists: {}, currPlaylist: {} }, action) => {\n  switch (action.type) {\n    case GET_ALL_PLAYLISTS:\n      return { ...state, playlists: action.playlists };\n\n    case GET_PLAYLIST:\n      return {\n        ...state,\n        currentPlaylist: action.playlist,\n      };\n\n      case CREATE_PLAYLIST:\n        return {\n          ...state,\n          playlists: { ...state.playlists, [action.playlist.id]: action.playlist },\n        };\n\n    case UPDATE_PLAYLIST:\n      return {\n        ...state,\n        playlists: { ...state.playlists, [action.playlist.id]: action.playlist },\n      };\n\n    case ADD_SONG_TO_PLAYLIST: {\n      const playlists = { ...state.playlists };\n      playlists[action.message.id] = action.message;\n      return { ...state, playlists };\n    }\n\n    case REMOVE_SONG_FROM_PLAYLIST: {\n      const playlists = { ...state.playlists };\n      playlists[action.message.id] = action.message;\n      return { ...state, playlists };\n    }\n\n    case DELETE_PLAYLIST:\n      const { [action.playlist.id]: deletedPlaylist, ...updatedPlaylists } = state.playlists;\n      return {\n        ...state,\n        playlists: updatedPlaylists,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default playlistsReducer;\n","export const GET_ALL_ARTISTS = 'artists/GET_ALL_artistS'\nexport const GET_ARTIST = 'artists/GET_artist'\nexport const RECEIVE_ARTIST = \"artists/RECEIVE_ARTIST\";\nexport const UPDATE_ARTIST = \"artists/UPDATE_ARTIST\";\n\n\n\n/**Action Creators: */\n\nconst getAllArtists = (artists) => ({\n  type: GET_ALL_ARTISTS,\n  artists,\n})\n\nconst getArtist = (artist) => ({\n  type: GET_ARTIST,\n  artist,\n});\n\nexport const receiveArtist = (artist) => ({\n  type: RECEIVE_ARTIST,\n  artist,\n});\n\nexport const editArtist = (artist) => ({\n  type: UPDATE_ARTIST,\n  artist,\n});\n\n\n/** Thunk Action Creators: */\nexport const fetchAllArtists = () => async (dispatch) => {\n  const response = await fetch('/api/artists');\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(getAllArtists(data.artists));\n  }\n};\n\nexport const fetchArtistById = (artistId) => async (dispatch) => {\n  const response = await fetch(`/api/artists/${artistId}`);\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(getArtist(data));\n  }\n};\n\nexport const createArtist = (payload) => async (dispatch) => {\n  const res = await fetch(\"/api/artists\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(payload),\n  });\n  if (res.ok) {\n      const data = await res.json();\n      dispatch(receiveArtist(data));\n      return data;\n  }\n  return res;\n};\n\nexport const updateArtist = (artist) => async (dispatch) => {\n  const res = await fetch(`/api/artists/${artist.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(artist),\n  });\n  if (res.ok) {\n      const data = await res.json();\n      dispatch(editArtist(data));\n      return data;\n  }\n  return res;\n};\n\nconst artistsReducer = (state = {artists:{}, currArtist: {}}, action) => {\n  switch (action.type) {\n    case GET_ALL_ARTISTS:\n      const artistsState = {};\n      action.artists.forEach((artist) => {\n        artistsState[artist.id] = artist;\n      });\n      return {...state, artists: artistsState};\n\n    case GET_ARTIST:\n      return {\n        ...state,\n        currentArtist: action.artist,\n      };\n\n    case RECEIVE_ARTIST:\n        return { ...state, [action.artist.id]: action.artist };\n\n    case UPDATE_ARTIST:\n        return { ...state };\n\n    default:\n      return state;\n  }\n};\n\nexport default artistsReducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session';\nimport songsReducer from './songs';\nimport albumsReducer from './albums';\nimport likesReducer from './likes';\nimport playlistsReducer from './playlists';\nimport artistsReducer from './artists';\n\nconst rootReducer = combineReducers({\n  session,\n  albumsReducer,\n  likesReducer,\n  playlistsReducer,\n  artistsReducer,\n  songsReducer\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import './OpenModalMenuItem.css';\nimport React from 'react';\nimport { useModal } from '../../context/Modal';\n\nfunction OpenModalMenuItem({\n    modalComponent, // component to render inside the modal\n    itemText, // text of the menu item that opens the modal\n    onItemClick, // optional: callback function that will be called once the menu item that opens the modal is clicked\n    onModalClose // optional: callback function that will be called once the modal is closed\n}) {\n    const { setModalContent, setOnModalClose } = useModal();\n\n    const onClick = () => {\n        if (onModalClose) setOnModalClose(onModalClose);\n        setModalContent(modalComponent);\n        if (onItemClick) onItemClick();\n    };\n\n    return (\n        // <li className='openModalButton' onClick={onClick}>{itemText}</li>\n        <p className='openModalButton' onClick={onClick}>{itemText}</p>\n    );\n}\n\nexport default OpenModalMenuItem;\n","import React, { useState } from \"react\";\nimport { login, logout } from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport \"./LoginForm.css\";\nimport { Link } from 'react-router-dom';\n\nfunction LoginFormModal() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const { closeModal } = useModal();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    } else {\n      closeModal()\n    }\n  };\n\n  const handleDemoLogin = async (e) => {\n    e.preventDefault();\n    await dispatch(logout());\n    closeModal()\n    const email = \"demo@aa.io\";\n    const password =\"password\";\n    setEmail(email);\n    setPassword(password);\n    return await dispatch(login(email, password));\n  };\n\n  return (\n    <>\n      <div id=\"loginmodal\">\n      <h1>Log In</h1>\n      <div>\n      <form id=\"loginform\" onSubmit={handleSubmit}>\n        <div>\n          {errors && errors.map((error, idx) => (\n              <p key={idx}>{error}</p>\n          ))}\n        </div>\n        <div>\n          <label>\n            Email\n            <input\n              className=\"loginput\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              minLength={4}\n              required\n            />\n          </label>\n          {(email.length<4) &&\n          <p>Email has at least 4 characters</p>}\n        </div>\n        <div>\n          <label>\n            Password\n            <input\n              className=\"loginput\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              minLength = {6}\n              required\n            />\n          </label>\n          {(password.length<6) &&\n          <p>Password has at least 6 characters</p>}\n        </div>\n        {(email.length<4 || password.length<6) &&\n        <button id=\"disabledlogin\" disabled={true}>Log In</button>}\n        {email.length>=4 && password.length>=6 &&\n        <button id=\"loginsubmitbutton\" type=\"submit\">Log In</button>}\n        <button id=\"logindemobutton\" onClick={handleDemoLogin}>\n            <Link className=\"logindemobutton\" to=\"/\" >Log in as Demo User</Link>\n        </button>\n      </form>\n      </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginFormModal;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { signUp } from \"../../store/session\";\nimport \"./SignupForm.css\";\n\nfunction SignupFormModal() {\n\tconst dispatch = useDispatch();\n\tconst [email, setEmail] = useState(\"\");\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\n\tconst [errors, setErrors] = useState([]);\n\tconst { closeModal } = useModal();\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tif (password === confirmPassword) {\n\t\t\tconst data = await dispatch(signUp(username, email, password));\n\t\t\tif (data) {\n\t\t\t\tsetErrors(data);\n\t\t\t} else {\n\t\t\t\tcloseModal();\n\t\t\t}\n\t\t} else {\n\t\t\tsetErrors([\n\t\t\t\t\"Confirm Password field must be the same as the Password field\",\n\t\t\t]);\n\t\t}\n\t};\n\n\tlet disabled = true;\n    if(email.length > 0 && confirmPassword.length > 0 && username.length >=4 && password.length >= 6){\n            disabled = false;\n    }\n\n\treturn (\n\t\t<>\n\t\t<div id=\"signupmodal\">\n\t\t\t<h1>Sign Up</h1>\n\t\t\t<form id=\"signupform\" onSubmit={handleSubmit}>\n\t\t\t\t<ul>\n\t\t\t\t\t{errors.map((error, idx) => (\n\t\t\t\t\t\t<li key={idx}>{error}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<label>\n\t\t\t\t\tEmail <br></br>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"signupinput\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\tminLength={4}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t{(email.length<4) && <p>Email has at least 4 characters</p>}\n\t\t\t\t<label>\n\t\t\t\t\tUsername <br></br>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"signupinput\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tPassword <br></br>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"signupinput\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\tminLength = {6}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t{(password.length<6) && <p>Password has at least 6 characters</p>}\n\t\t\t\t<label>\n\t\t\t\t\tConfirm Password\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"signupinput\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</label>\n                {disabled && <button id=\"disabledsignup\">Sign Up</button>}\n                {!disabled && <button id=\"regularsignup\" type=\"submit\">Sign Up</button>}\n\t\t\t</form>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default SignupFormModal;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as sessionActions from '../../store/session';\nimport OpenModalMenuItem from './OpenModalMenuItem';\nimport LoginFormModal from '../LoginFormModal';\nimport SignupFormModal from '../SignupFormModal';\nimport \"./ProfileButton.css\";\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n\n  const openMenu = (e) => {\n    e.stopPropagation();\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = (e) => {\n      if (!ulRef.current.contains(e.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener('click', closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const closeMenu = () => setShowMenu(false);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n    closeMenu();\n  };\n\n  const ulClassName = \"profile-dropdown\" + (showMenu ? \"\" : \" hidden\");\n\n  return (\n    <div id=\"profileNavButtonMenuItem\">\n      {(!user) &&\n        <div id=\"menuitemlogin\">\n          <OpenModalMenuItem\n          itemText=\"Log In\"\n          onItemClick={closeMenu}\n          modalComponent={<LoginFormModal />}\n          />\n        </div>\n      }\n      {(!user) &&\n        <div id=\"menuitemsignup\">\n        <OpenModalMenuItem\n        itemText=\"Sign Up\"\n        onItemClick={closeMenu}\n        modalComponent={<SignupFormModal />}\n        />\n        </div>\n      }\n      <div id=\"iconandcloseopenmenu\">\n      {user && !showMenu &&\n        <div id=\"openMenuNavButton\" onClick={openMenu}>\n          <i className=\"fas fa-user-circle fa-2x\"/>\n          <i className=\"fas fa-sort-down fa-2x\"></i>\n        </div>}\n      {user && showMenu &&\n        <div id=\"closeMenuNavButton\" onClick={closeMenu}>\n        <i className=\"fas fa-user-circle fa-2x\"/>\n        <i className=\"fas fa-sort-up fa-2x\"></i>\n        </div>}\n      <section className={ulClassName} ref={ulRef}>\n        {user ? (\n          <div id=\"menuwithlogout\">\n            <div>Hello, {user.username}</div>\n            <div>{user.email}</div>\n            <div>\n                 <Link id=\"menulibraryhome\" to=\"/\" > View Home Page </Link>\n            </div>\n            <div>\n              <hr/>\n              <div onClick={logout}><Link id=\"menulogout\" to=\"/\" >Log Out</Link></div>\n            </div>\n          </div>\n        ) : null}\n      </section>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileButton;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport './Navigation.css';\n\n\nfunction Navigation({ isLoaded }){\n\tconst sessionUser = useSelector(state => state.session.user);\n\n\treturn (\n\t\t<nav>\n\t\t\t{/* <div id=\"LibraryMenu\">\n\t\t\t\t\t<MenuLibrary />\n\t\t\t</div> */}\n\t\t\t<div id=\"loginsignupnavbar\">\n\t\t\t\t{isLoaded && (\n\t\t\t\t\t<ProfileButton user={sessionUser} />\n\t\t\t\t)}\n\t\t\t\t{/* {isLoaded && (\n\t\t\t\t<div id=\"viewallthree\">\n\t\t\t\t\t<MainPageContent />\n\t\t\t\t</div>)} */}\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport './MenuLibrary.css';\n\nfunction MenuLibrary({ isLoaded }){\n\tconst sessionUser = useSelector(state => state.session.user);\n\n\treturn (\n        <nav className=\"leftmenu\">\n        <div className=\"leftmenufirst\">\n            {/* <div>\n\t\t\t\t<i className=\"fa-brands fa-spotify\"></i>\n\t\t\t\t{\" \"} Spotify\n            </div> */}\n            <div>\n                <Link to=\"/\" className='home'>\n\t\t\t\t\t<i id=\"fa-houseicon\" className=\"fa-solid fa-house\"></i>\n\t\t\t\t\t{\" \"} Home\n\t\t\t\t</Link>\n            </div>\n            {/* <div>\n\t\t\t\t<i className=\"fa-solid fa-magnifying-glass\"></i>\n\t\t\t\t{\" \"} Search\n            </div> */}\n\t\t\t{sessionUser &&\n\t\t\t<div >\n\t\t\t\t<NavLink to=\"/songs/current\"><button>View my songs</button></NavLink>\n\t\t\t</div>}\n\t\t\t{sessionUser &&\n\t\t\t<div>\n\t\t\t\t<NavLink to=\"/playlists/current\"><button>View my playlists</button></NavLink>\n\t\t\t</div>}\n\t\t\t{sessionUser &&\n\t\t\t<div>\n\t\t\t\t<NavLink to=\"/albums/current\"><button>View my albums</button></NavLink>\n\t\t\t</div>}\n\n\t\t</div>\n\t\t<div className=\"leftmenulibrary\">\n\t\t\t<div>\n\t\t\t\t<i className=\"fa-solid fa-headphones-simple\"></i>\n\t\t\t\t{\" \"}Your Library\n\t\t\t</div>\n\t\t\t<div className=\"leftmenulibrarycreate\">\n\t\t\t\t<div className=\"leftmenulibrarycreate-1\">\n\t\t\t\t\t<div id=\"leftmenulibrarytext1\">Let's dive into music</div>\n\t\t\t\t\t<NavLink to=\"/songs\"><button>View all the songs</button></NavLink>\n\t\t\t\t\t<NavLink to=\"/playlists\"><button>View all the playlists</button></NavLink>\n\t\t\t\t\t<NavLink to=\"/albums\"><button>View all the albums</button></NavLink>\n\t\t\t\t</div>\n\t\t\t\t{sessionUser &&\n\t\t\t\t<div className=\"leftmenulibrarycreate-2\">\n\t\t\t\t\t<div id=\"leftmenulibrarytext2\">Create a new album here. It's easy, we'll help you</div>\n\t\t\t\t\t<NavLink to=\"/albums/new\"><button>Create Album</button></NavLink>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{sessionUser &&\n\t\t\t\t<div className=\"leftmenulibrarycreate-4\">\n\t\t\t\t\t<div id=\"leftmenulibrarytext4\">Create a new playlist here. It's easy, we'll help you</div>\n\t\t\t\t\t<NavLink to=\"/playlists/new\"><button>Create Playlist</button></NavLink>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{sessionUser &&\n\t\t\t\t<div className=\"leftmenulibrarycreate-3\">\n\t\t\t\t\t<div id=\"leftmenulibrarytext3\">Create a new song here. It's easy, we'll help you</div>\n\t\t\t\t\t<NavLink to=\"/songs/new\"><button>Create Song</button></NavLink>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n        </nav>\n\t);\n}\n\nexport default MenuLibrary;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSong, updateSong } from '../../store/songs';\nimport { fetchAllArtists } from '../../store/artists';\nimport MenuLibrary from '../MenuLibrary';\nimport './SongForm.css';\n\nconst SongForm = ({ song, formType }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [songId] = useState(song?.id)\n  const [artistName, setArtistName] = useState(song?.artist_name || '');\n  const [title, setTitle] = useState(song?.title || '');\n  const [lyrics, setLyrics] = useState(song?.lyrics || '');\n  const [url, setUrl] = useState(song?.url || '');\n  const [duration, setDuration] = useState(song?.duration || '');\n  const [release_date, setReleaseDate] = useState(song?.release_date || '');\n  const [song_file, setSongFile] = useState(song?.song_file);\n  console.log(\"This is song_file:\", song_file)\n  const [songLoading, setSongLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const formTitle = formType === 'Create Song' ? 'Create a New Song' : 'Update Your Song';\n\n  const isValidUrl = (value) => {\n    try {\n      new URL(value);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!artistName || String(artistName).trim() === '') {\n      newErrors.artistName = 'Artist Name is required';\n    }\n    if (!title || String(title).trim() === '') {\n      newErrors.title = 'Title is required';\n    }\n    if (!lyrics || String(lyrics).trim() === '') {\n      newErrors.lyrics = 'Lyrics is required';\n    }\n    if (!isValidUrl(url)) {\n      newErrors.url = 'Invalid URL format';\n    }\n    if (!duration || String(duration).trim() === ''|| isNaN(Number(duration))) {\n      newErrors.duration = 'Duration is required and must be a number';\n    }\n    if (!release_date || String(release_date).trim() === '') {\n      newErrors.release_date = 'Release Date is required';\n    }\n    if (!song_file) {\n      newErrors.song_file = 'Song File is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // console.log(\"Song prop in SongForm:\", song);\n    setErrors({});\n    const isFormValid = validateForm();\n    if (isFormValid) {\n    const formData = new FormData();\n    formData.append(\"song_file\", song_file);\n    formData.append(\"artist_name\", artistName);\n    formData.append(\"title\", title);\n    formData.append(\"lyrics\", lyrics);\n    formData.append(\"url\", url);\n    formData.append(\"duration\", duration);\n    formData.append(\"release_date\", release_date);\n    console.log(\"This is formdata after appending everything\", formData)\n    setSongLoading(true);\n      try {\n        if (formType === 'Update Song') {\n          await dispatch(updateSong(formData, songId));\n        } else if (formType === 'Create Song') {\n          await dispatch(createSong(formData));\n        }\n        history.push('/songs');\n      } catch (error) {\n        console.error(\"Error:\", error.message);\n        if (error instanceof TypeError) {\n          console.error(\"Error: res.json is not a function\");\n        }\n      } finally {\n        setSongLoading(false);\n        history.push('/songs');\n      }\n    }\n  };\n\n  const artistNameError = errors.artistName ? 'Artist Name: ' + errors.artistName : null;\n  const titleError = errors.title ? 'Title: ' + errors.title : null;\n  const lyricsError = errors.lyrics ? 'Lyrics: ' + errors.lyrics : null;\n  const urlError = errors.url ? 'URL: ' + errors.url : null;\n  const durationError = errors.duration ? 'Duration: ' + errors.duration : null;\n  const releaseDateError = errors.release_date ? 'Release Date: ' + errors.release_date : null;\n  const songFileError = errors.song_file ? 'Song File: ' + errors.song_file : null;\n\n  return (\n    <div className='songformwrapper'>\n      <div className=\"songform-1\">\n        <MenuLibrary />\n      </div>\n      <div className=\"songform-2\">\n        <form className='form' onSubmit={handleSubmit} encType=\"multipart/form-data\">\n          <p className='formHeading'>{formTitle}</p>\n          <div className='errors'>\n            <ul>{artistNameError}</ul>\n            <ul>{titleError}</ul>\n            <ul>{lyricsError}</ul>\n            <ul>{urlError}</ul>\n            <ul>{durationError}</ul>\n            <ul>{releaseDateError}</ul>\n            <ul>{songFileError}</ul>\n          </div>\n          <p className='formSubheading'>Want to share your song?</p>\n          <p className='nomal'>Some details about your song.</p>\n          <div className='formNormal'>\n            <label>\n              Artist Name<br />\n              <input type=\"text\" value={artistName} placeholder=\"Artist Name\" onChange={(e) => setArtistName(e.target.value)} /><br />\n            </label>\n            <label>\n              Song Title<br />\n              <input type=\"text\" value={title} placeholder=\"Song Title\" onChange={(e) => setTitle(e.target.value)} /><br />\n            </label>\n            <label>\n              Lyrics<br />\n              <input type=\"text\" value={lyrics} placeholder=\"Lyrics\" onChange={(e) => setLyrics(e.target.value)} /><br />\n            </label>\n            <label>\n              Song Image URL<br />\n              <input type=\"text\" value={url} placeholder=\"Song Image URL\" onChange={(e) => setUrl(e.target.value)} /><br />\n            </label>\n            <label>\n              Song Duration<br />\n              <input type=\"text\" value={duration} placeholder=\"Song Duration\" onChange={(e) => setDuration(e.target.value)} /><br />\n            </label>\n            <label>\n              Release Date<br />\n              <input type=\"text\" value={release_date} placeholder=\"Release Date\" onChange={(e) => setReleaseDate(e.target.value)} /><br />\n            </label>\n            <label>\n              Upload Song File<br />\n              <input type=\"file\" accept=\"audio/*\" placeholder=\"Upload Song File\" onChange={(e) => setSongFile(e.target.files[0])} /><br />\n            </label>\n          </div>\n          <button className='submitFormButton' type=\"submit\">{formType}</button>\n          {songLoading && <p>Loading...</p>}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SongForm;\n","import SongForm from '../SongForm/index';\nimport React  from 'react';\nconst CreateSong = () => {\n  const song = {\n    artist_name:'',\n    title: '',\n    lyrics: '',\n    url: '',\n    duration: '',\n    release_date: '',\n    song_file:'',\n  };\n  return (\n    <SongForm song={song} formType=\"Create Song\"/>\n  );\n};\n\nexport default CreateSong;\n","import SongForm from '../SongForm/index';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSongDetails } from '../../store/songs';\nimport { fetchAllArtists } from '../../store/artists';\n\nconst UpdateSong = () => {\n  const dispatch = useDispatch();\n  const { songId } = useParams();\n  const song = useSelector(state => state.songsReducer[songId]);\n  const allArtists = useSelector(state => state.artistsReducer);\n  useEffect(() => {\n    dispatch(getSongDetails(songId)).then(()=>{dispatch(fetchAllArtists())});\n  }, [dispatch, songId]);\n  let curr_artist;\n  if(song){\n    curr_artist = (Object.values(Object.values(allArtists)[0])).filter((curr)=>(curr.id===song.artist_id))[0]?.name;\n    // console.log(curr_artist)\n    song[\"artist_name\"] = curr_artist;\n  }\n  if (!song) return(<></>);\n  return (\n    Object.keys(song).length > 1 && (\n      <>\n        <SongForm song={song} formType=\"Update Song\"/>\n      </>\n    )\n  );\n};\n\nexport default UpdateSong;\n","import './SongIndexItem.css';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport React  from 'react';\n\nconst SongIndexItem = ({ song }) => {\n  // console.log(\"Song in SongIndexItem:\", song);\n  // console.log(\"Title:\", song.title);\n  // console.log(\"User ID:\", song.user_id);\n  const sessionUser = useSelector(state => state.session.user);\n  const {id, title, url} = song;\n  const sessionUserId = sessionUser ? sessionUser.id : null;\n  // const checkUserVSOwner = sessionUserId === user_id ? true : false;\n  return (\n    <div className='songTile'>\n      <Link id=\"songlinkwithtext\" to={`/songs/${song.id}`}  key={`${id}`}>\n        {/* <hr /> */}\n        <div id=\"songgrid1\">\n            <div id=\"songitem1\">\n                <img id =\"songImage\" src={url} alt=\"song\"/>\n            </div>\n            <div id=\"songitem2\">\n                {title}\n            </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default SongIndexItem;\n","import './ManageSongs.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMySongs } from '../../store/songs';\nimport SongIndexItem from '../SongIndexItem/index';\nimport MenuLibrary from '../MenuLibrary';\n\nconst ManageSongs = () => {\n    const dispatch = useDispatch();\n    const songs = useSelector(state => state.songsReducer.songs|| []);\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        dispatch(getMySongs()).then(() => setIsLoading(false));\n    }, [dispatch]);\n    const sessionUser = useSelector(state => state.session.user);\n    if (isLoading) return (<>Loading...</>);\n    const songsByUser = songs ? songs.filter(song => song.user_id === sessionUser.id) : [];\n    const hasSongs = songsByUser.length > 0;\n    return (\n        <div className='manageSongwrapper'>\n            <div className='manageSongitem-1'>\n                <MenuLibrary />\n            </div>\n            <div className='manageSongitem-2'>\n                <p className='title'>Manage Songs</p>\n                {!hasSongs && <Link to={'/songs/new'}><button className='createSongButton'>Create a New Song</button></Link>}\n                {hasSongs && <ul className='manageSongIndex'>\n                    {songsByUser.map((song) => (\n                        <ul className='manageEachSong' key={String(song.id)}>\n                            <SongIndexItem song={song}/>\n                        </ul>\n                    ))}\n                </ul>}\n            </div>\n        </div>\n    );\n};\n\nexport default ManageSongs;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { albumDetails } from \"../../store/albums\";\nimport { Link } from 'react-router-dom';\nimport \"./AlbumIndexItem.css\";\nconst AlbumIndexItem = ({ album }) => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const { id, title, url} = album;\n    const sessionUserId = sessionUser ? sessionUser.id : null;\n\n    return (\n        <Link id=\"albumlinkwithtext\" to={`/albums/${id}`} key={`${id}`}>\n            <div id=\"albumgrid1\">\n                <div id=\"albumitem1\">\n                    <img id=\"albumImage\" src={url} alt=\"album\" />\n                </div>\n                <div id=\"albumitem2\">\n                    {title}\n                </div>\n            </div>\n        </Link>\n\n\n    );\n}\n\nexport default AlbumIndexItem;\n","import './ManageAlbums.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMyAlbums } from '../../store/albums';\nimport AlbumIndexItem from '../AlbumIndexItem/index';\nimport MenuLibrary from '../MenuLibrary';\n\nconst ManageAlbums = () => {\n    const dispatch = useDispatch();\n    const albums = useSelector(state => Object.values(state.albumsReducer || {}));\n    const [isLoading, setIsLoading] = useState(true);\n    const sessionUser = useSelector(state => state.session.user);\n\n    useEffect(() => {\n        if (sessionUser) {\n            dispatch(getMyAlbums()).then(() => setIsLoading(false));\n        }\n    }, [dispatch, sessionUser]);\n\n    if (isLoading) return <>Loading...</>;\n\n    // console.log(\"sessionUser:\", sessionUser);\n    // console.log(\"albums:\", albums);\n\n    const albumsByUser = albums ? albums.filter(album => {\n        // console.log(\"Checking album with user_id:\", album.user_id);\n        // console.log(\"Against sessionUser id:\", sessionUser?.id);\n        return album.user_id === sessionUser?.id;\n    }) : [];\n\n    // console.log(\"albumsByUser:\", albumsByUser);\n\n    const hasAlbums = albumsByUser.length > 0;\n\n    return (\n        <div className='manageAlbumwrapper'>\n            <div className='manageAlbumitem-1'>\n                <MenuLibrary />\n            </div>\n            <div className='manageAlbumitem-2'>\n            <p className='title'>Manage Albums</p>\n            {!hasAlbums && <Link to={'/albums/new'}><button className='createAlbumButton'>Create a New Album</button></Link>}\n            {hasAlbums && <ul className='manageAlbumIndex'>\n                {albumsByUser.map((album) => (\n                    <ul className='manageEachAlbum' key={String(album.id)}>\n                        {album && <AlbumIndexItem album={album} />}\n                    </ul>\n                ))}\n             </ul>}\n            </div>\n        </div>\n    );\n};\n\nexport default ManageAlbums;\n","import './PlaylistIndexItem.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport DeletePlaylistModal from '../DeletePlaylistModal/index';\nimport React  from 'react';\n\nconst PlaylistItem = ({ playlist }) => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const {id, title, user_id, url} = playlist;\n  const sessionUserId = sessionUser ? sessionUser.id : null;\n  const checkUserVSOwner = sessionUserId === user_id ? true : false;\n  return (\n    // <div className='playlistTile'>\n    //   <span className='tooltip'>{title}</span>\n    //   <Link to={`/playlists/${playlist.id}`}><p className='title'>{title}</p></Link>\n    //   {checkUserVSOwner && <OpenModalMenuItem itemText='Delete' modalComponent={<DeletePlaylistModal playlist={playlist}/>}/>}\n    // </div>\n    <div className='playlistTile'>\n    <Link id=\"playlistlinkwithtext\" to={`/playlists/${playlist.id}`}  key={`${id}`}>\n      {/* <hr /> */}\n      <div id=\"playlistgrid1\">\n          <div id=\"playlistitem1\">\n              <img id =\"playlistImage\" src={url} alt=\"playlist\"/>\n          </div>\n          <div id=\"playlistitem2\">\n              {title}\n          </div>\n      </div>\n    </Link>\n  </div>\n  );\n};\n\nexport default PlaylistItem;\n","import './ManagePlaylists.css';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMyPlaylists } from '../../store/playlists';\nimport PlaylistIndexItem from '../PlaylistIndexItem/index';\nimport MenuLibrary from '../MenuLibrary';\n\nconst ManagePlaylists = () => {\n    const dispatch = useDispatch();\n    const playlists = useSelector(state => Object.values(state.playlistsReducer.playlists.playlists||[]));\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        dispatch(getMyPlaylists()).then(() => setIsLoading(false));\n    }, [dispatch]);\n    const sessionUser = useSelector(state => state.session.user);\n    if (isLoading) return (<>Loading...</>);\n    const playlistsByUser = playlists ? playlists.filter(playlist => playlist.user_id === sessionUser.id) : [];\n    const hasPlaylists = playlistsByUser.length > 0;\n    return (\n      <div className='managePlaylistwrapper'>\n        <div className='managePlaylistitem-1'>\n          <MenuLibrary />\n        </div>\n        <div className='managePlaylistitem-2'>\n            <p className='title'>Manage Playlists</p>\n            {!hasPlaylists && <Link to={'/playlists/new'}><button className='createPlaylistButton'>Create a New Playlist</button></Link>}\n            {hasPlaylists && <ul className='managePlaylistIndex'>\n                {playlistsByUser.map((playlist) => (\n                    <ul className='manageEachPlaylist' key={String(playlist.id)}>\n                        {playlist && <PlaylistIndexItem playlist={playlist}/>}\n                    </ul>\n                ))}\n             </ul>}\n             </div>\n        </div>\n    );\n};\n\nexport default ManagePlaylists;\n","import './SongIndex.css';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllSongs } from '../../store/songs';\nimport SongIndexItem from '../SongIndexItem/index';\nimport MenuLibrary from '../MenuLibrary';\n\nconst SongIndex = ({num}) => {\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songsReducer?.songs);\n  // console.log(\"This is songs:\", songs);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    dispatch(getAllSongs()).then(() => setIsLoading(false));\n  }, [dispatch]);\n  if (isLoading) return (<>Loading...</>);\n\n  return (\n    <div className='songIndexwrapper'>\n      {num !== 4 && <div className='songIndexitem-1'>\n         <MenuLibrary />\n      </div>}\n      <div className='songIndexitem-2'>\n        { num !== 4 && <h2>{\" \"} All Songs:</h2>}\n        <ul className='landingSongIndex'>\n          {num !== 4 && Object.values(songs).map((song, index) => (\n              <SongIndexItem song={song} key={index}/>\n          ))}\n          {num === 4 && Object.values(songs).slice(0,4).map((song, index) => (\n              <SongIndexItem song={song} key={index}/>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SongIndex;\n","import './DeleteSong.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deleteSong } from '../../store/songs';\nimport { useHistory } from 'react-router-dom';\n\nconst DeleteSongModal = ({ song }) => {\n    const songId = song.id;\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const { closeModal } = useModal();\n    const history = useHistory();\n\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        try {\n            await dispatch(deleteSong(songId));\n            closeModal();\n            history.push('/songs');\n        } catch (error) {\n            console.error('Error deleting song:', error);\n\n            try {\n                const data = await error.json();\n                if (data && data.errors) {\n                    setErrors(data.errors);\n                }\n            } catch (jsonError) {\n                console.error('Error parsing JSON:', jsonError);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <p className='heading'>Confirm Delete</p>\n            <p className='subheading'>Are you sure you want to remove this song?</p>\n            <button className='deleteSongYes' onClick={handleDelete}>Yes - Delete Song</button><br />\n            <button className='deleteSongNo' onClick={closeModal}>No - Keep Song</button>\n        </div>\n    );\n}\n\nexport default DeleteSongModal;\n","import './AddSongToAlbumModal.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { getMyAlbums, createAlbumSong } from '../../store/albums';\nimport { useHistory } from 'react-router-dom';\n\nconst AddSongToAlbumModal = ({ song }) => {\n  const songId = song.id;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const albums = useSelector(state => Object.values(state.albumsReducer|| {}));\n  const sessionUser = useSelector(state => state.session.user);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [errors, setErrors] = useState({});\n  const { closeModal } = useModal();\n\n  useEffect(() => {\n    dispatch(getMyAlbums()).then(() => setIsLoading(false));\n  }, [dispatch]);\n\n  const isSongInAlbum = (album) => album.songs.some((s) => s.id === songId);\n\n  const albumsByUser = albums ? albums.filter(album => album.user_id === sessionUser?.id) : [];\n\n  const handleAddSong = async (albumId, albumTitle) => {\n    try {\n      await dispatch(createAlbumSong(albumId, songId));\n      // Manually update the state after adding the song\n      await dispatch(getMyAlbums()).then(() => {\n        closeModal();\n        window.confirm(`Song successfully added to \"${albumTitle}\"`);\n        history.push(`/albums/${albumId}`)\n      });\n    } catch (res) {\n      const data = await res.json();\n      if (data && data.errors) {\n        setErrors(data.errors);\n      }\n    };\n  };\n\n  if (isLoading) return (<>Loading...</>);\n\n  return (\n    <div>\n      <p className='heading'>Which album would you like to add this song to?</p>\n      <ul>\n        {albumsByUser.map((album) => (\n          !isSongInAlbum(album) && (\n            <li key={album.id}>\n              <button className='addSongToAlbum' onClick={() => handleAddSong(album.id, album.title)}>\n                {album.title}\n              </button>\n            </li>\n          )\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default AddSongToAlbumModal;\n","import './AddSongToPlaylistModal.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { getMyPlaylists, addSongToPlaylistThunk } from '../../store/playlists';\nimport { useHistory } from 'react-router-dom';\n\nconst AddSongToPlaylistModal = ({ song }) => {\n    const songId = song.id;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const playlists = useSelector(state => Object.values(state.playlistsReducer.playlists.playlists || {}));\n    // const playlists = useSelector(state => state.playlistsReducer);\n    // console.log('playlists', playlists);\n    const sessionUser = useSelector(state => state.session.user);\n    const [isLoading, setIsLoading] = useState(true);\n    const [errors, setErrors] = useState({});\n    const { closeModal } = useModal();\n\n    useEffect(() => {\n        dispatch(getMyPlaylists()).then(() => setIsLoading(false));\n    }, [dispatch]);\n\n    const isSongInPlaylist = (playlist) => playlist.songs.some((s) => s.id === songId);\n\n    const playlistsByUser = playlists ? playlists.filter(playlist => playlist.user_id === sessionUser?.id) : [];\n\n    const handleAddSong = async (playlistId, playlistTitle) => {\n        try {\n            await dispatch(addSongToPlaylistThunk(playlistId, songId));\n            // Manually update the state after adding the song\n            await dispatch(getMyPlaylists()).then(() => {\n                closeModal();\n                window.confirm(`Song successfully added to \"${playlistTitle}\"`);\n                history.push(`/playlists/${playlistId}`)\n            });\n        } catch (res) {\n            const data = await res.json();\n            if (data && data.errors) {\n                setErrors(data.errors);\n            }\n        }\n    };\n\n        if (isLoading) return (<>Loading...</>);\n\n        return (\n            <div>\n                <p className='heading'>Which playlist would you like to add this song to?</p>\n                <ul>\n                    {playlistsByUser.map((playlist) => (\n                        !isSongInPlaylist(playlist) && (\n                            <li key={playlist.id}>\n                                <button className='addSongToPlaylist' onClick={() => handleAddSong(playlist.id, playlist.title)}>\n                                    {playlist.title}\n                                </button>\n                            </li>\n                        )\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n\n    export default AddSongToPlaylistModal;\n","import './RemoveSongFromAlbumModal.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { getMyAlbums, deleteAlbumSong } from '../../store/albums';\nimport { useHistory } from 'react-router-dom';\n\nconst RemoveSongFromAlbumModal = ({ song }) => {\n  const songId = song.id;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const albums = useSelector(state => Object.values(state.albumsReducer || {}));\n  const { closeModal } = useModal();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    dispatch(getMyAlbums()).then(() => setIsLoading(false));\n  }, [dispatch]);\n\n  const isSongInAlbum = (album) => album.songs.some((s) => s.id === songId);\n\n  const handleDelete = async (albumId, albumTitle) => {\n    if (isSongInAlbum(albums.find(album => album.id === albumId))) {\n      try {\n        await dispatch(deleteAlbumSong(albumId, songId));\n        // Manually update the state after removing the song\n        await dispatch(getMyAlbums()).then(() => {\n          closeModal();\n          window.confirm(`Song successfully removed from \"${albumTitle}\"`);\n          history.push(`/albums/${albumId}`)\n        });\n      } catch (res) {\n        const data = await res.json();\n        if (data && data.errors) {\n          setErrors(data.errors);\n        }\n      }\n    } else {\n      window.alert('The selected album does not contain the specified song.');\n    }\n  };\n\n  if (isLoading) return (<>Loading...</>);\n\n  return (\n    <div>\n      <p className='heading'>Which album would you like to delete this song from?</p>\n      <ul>\n        {albums.map((album) => (\n          isSongInAlbum(album) && (\n            <li key={album.id}>\n              <button className='deleteSongFromAlbum' onClick={() => handleDelete(album.id, album.title)}>\n                {album.title}\n              </button>\n            </li>\n          )\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default RemoveSongFromAlbumModal;\n","import './RemoveSongFromPlaylistModal.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { getMyPlaylists, removeSongFromPlaylistThunk } from '../../store/playlists';\nimport { useHistory } from 'react-router-dom';\n\nconst RemoveSongFromPlaylistModal = ({ song }) => {\n    const songId = song.id;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const playlists = useSelector(state => Object.values(state.playlistsReducer.playlists.playlists || {}));\n    const sessionUser = useSelector(state => state.session.user);\n    const [isLoading, setIsLoading] = useState(true);\n    const [errors, setErrors] = useState({});\n    const { closeModal } = useModal();\n\n    useEffect(() => {\n        dispatch(getMyPlaylists()).then(() => setIsLoading(false));\n    }, [dispatch]);\n\n    const isSongInPlaylist = (playlist) => playlist.songs.some((s) => s.id === songId);\n\n    const playlistsByUser = playlists ? playlists.filter(playlist => playlist.user_id === sessionUser?.id) : [];\n\n    const handleRemoveSong = async (playlistId, playlistTitle) => {\n        try {\n            await dispatch(removeSongFromPlaylistThunk(playlistId, songId));\n            // Manually update the state after removing the song\n            await dispatch(getMyPlaylists()).then(() => {\n                closeModal();\n                window.confirm(`Song successfully removed from \"${playlistTitle}\"`);\n                history.push(`/playlists/${playlistId}`)\n            });\n        } catch (res) {\n            const data = await res.json();\n            if (data && data.errors) {\n                setErrors(data.errors);\n            }\n        }\n    };\n\n    if (isLoading) return (<>Loading...</>);\n\n    return (\n        <div>\n            <p className='heading'>Which playlist would you like to delete this song from?</p>\n            <ul>\n                {playlistsByUser.map((playlist) => (\n                    isSongInPlaylist(playlist) && (\n                        <li key={playlist.id}>\n                            <button className='deleteSongFromPlaylist' onClick={() => handleRemoveSong(playlist.id, playlist.title)}>\n                                {playlist.title}\n                            </button>\n                        </li>\n                    )\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default RemoveSongFromPlaylistModal;\n","import './LikeSong.css';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSongLikes,getAllLikes,createLike, deleteLike } from '../../store/likes';\nimport { getSongDetails } from '../../store/songs';\n\nfunction LikeSong({songId, userId}) {\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(true);\n    const sessionUser = useSelector(state => state.session.user);\n    songId = parseInt(songId);\n    const alllikes = useSelector(state => state.likesReducer);\n    const numofl=  Object.values(alllikes).filter((curr)=> (!(curr.song_id - songId))).length - 1;\n\n    let currLike = Object.values(alllikes).filter((curr)=> (!(curr.song_id - songId) && !(curr.user_id - sessionUser.id)));\n    const[isliked, setIsLiked] = useState(Object.keys(currLike[0]).length && currLike[0].user_id==sessionUser.id);\n\n    useEffect(() => {\n      dispatch(getSongDetails(songId)).then(()=>dispatch(getAllLikes())).then(()=>dispatch(getSongLikes(songId))).then(() => setIsLoading(false));\n    }, [dispatch, songId]);\n\n  if (isLoading) return (<>Loading...</>);\n\n\n  const handleClick = () => {\n    if(isliked){\n      let likeId;\n      if(currLike.length){\n        likeId = currLike[0].id;\n      }\n\n      dispatch(deleteLike(likeId, songId))\n\n    }\n    if(!isliked)\n    {\n    const addlike = {\"user_id\" : userId,\n      \"song_id\" : songId };\n    dispatch(createLike(addlike, songId))\n\n    }\n    setIsLiked(!isliked);\n  };\n\n\n  if(!isliked){\n    return (\n      <>\n        <div className=\"likediv\" onClick={handleClick}><i id=\"regularheart\" className=\"fa-regular fa-heart\"></i></div>\n        <div>{numofl} liked this song</div>\n      </>\n        )\n  }else{\n    return (\n      <>\n        <div className=\"likediv\" onClick={handleClick}><i id=\"solidheart\" className=\"fa-solid fa-heart\"></i></div>\n        <div>{numofl} liked this song</div>\n      </>\n    )\n  }\n\n}\n\nexport default LikeSong\n","import './SongDetails.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSongDetails } from '../../store/songs';\nimport DeleteSongModal from '../DeleteSongModal';\nimport AddSongToAlbumModal from '../AddSongToAlbumModal';\nimport AddSongToPlaylistModal from '../AddSongToPlaylistModal';\nimport RemoveSongFromAlbumModal from '../RemoveSongFromAlbumModal';\nimport RemoveSongFromPlaylistModal from '../RemoveSongFromPlaylistModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport { getSongLikes, getAllLikes } from '../../store/likes';\nimport LikeSong from '../LikeSong';\nimport { getMyAlbums, deleteAlbumSong } from '../../store/albums';\nimport { getMyPlaylists, removeSongFromPlaylistThunk } from '../../store/playlists';\nimport MenuLibrary from '../MenuLibrary';\nimport { fetchAllArtists } from '../../store/artists';\n\n\n\nconst SongDetails = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { songId } = useParams();\n  const sessionUser = useSelector(state => state.session.user);\n  const song = useSelector(state => state.songsReducer[songId]);\n  const like = useSelector(state => state.likesReducer.likes);\n  // console.log(\"this is song:\", song)\n  // console.log(\"this is like:\", like)\n  const [isLoading, setIsLoading] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const allArtists = useSelector(state => state.artistsReducer);\n  const ulRef = useRef();\n  const albums = useSelector(state => state.albumsReducer);\n  const playlists = useSelector(state => state.playlistsReducer.playlists);\n  const hasAlbums = Object.keys(albums).length > 0;\n  const hasPlaylists = Object.keys(playlists).length > 0;\n\n  useEffect(() => {\n    dispatch(getSongDetails(songId)).then(()=>dispatch(getAllLikes()))\n    .then(()=>dispatch(getSongLikes(songId))).then(()=>dispatch(fetchAllArtists())).then(() => setIsLoading(false));\n  }, [dispatch, songId]);\n  if (isLoading || !song) return (<>Loading...</>);\n  const { user_id, artist_id, title, lyrics, url, duration, release_date } = song;\n\n\n  const song_curr_artist = (Object.values(Object.values(allArtists)[0])).filter((curr)=>(curr.id==artist_id))[0].name;\n    // console.log(curr_artist)\n  const sessionUserId = sessionUser ? sessionUser.id : null;\n  //check Delete Song auth\n  const checkUserVSOwner = sessionUserId === user_id ? true : false;\n\n  const closeMenu = (e) => {\n    if (!ulRef.current?.contains(e.target)) {\n      setShowMenu(false);\n    }\n  };\n\n  const handleEditClick = () => {\n    // Navigate to the edit page for the current playlist\n    history.push(`/songs/${songId}/edit`);\n  };\n\n  const convertDuration = (totalSec) => {\n    const min = Math.floor(totalSec / 60);\n    let sec = totalSec % 60;\n    if(sec<10 && sec>=0){\n      sec=\"0\"+sec\n    }\n    const newStr = `${min}:${sec}`;\n    return newStr;\n  };\n  const formattedDuration = convertDuration(duration);\n\n  return (\n    <>\n      <div className='songDetailwrapper'>\n      <div className='songDetailitem-1'>\n         <MenuLibrary />\n      </div>\n      <div className='songDetailitem-2'>\n        <img id =\"songdetialimage\" src={url} alt=\"songdetailimage\"/>\n        <p className='title'> Title: {title}</p>\n        <p >Artist: {song_curr_artist}</p>\n        <p className='lyrics'>Lyrics: {lyrics}</p>\n        <p className='duration'>Duration: {formattedDuration}</p>\n        <p className='release_date'>Release Date: {release_date}</p>\n      <div>\n      {sessionUser && <LikeSong userId={user_id} songId={songId}/>}\n      {checkUserVSOwner &&\n      <button className=\"songbuttons\" onClick={closeMenu}>\n        <OpenModalMenuItem\n          itemText=\"Delete Song\"\n          onItemClick={closeMenu}\n          modalComponent={<DeleteSongModal song={song}/>}\n        />\n      </button>}\n      {checkUserVSOwner &&(\n      <button className=\"songbuttons\" onClick={handleEditClick}><p>Edit Song</p></button>\n      )}\n      </div>\n      {sessionUserId && <button className=\"songbuttons\" onClick={closeMenu}> <OpenModalMenuItem itemText=\"Add Song to Album\" onItemClick={closeMenu} modalComponent={<AddSongToAlbumModal song = {song}/>}/> </button>}\n      {sessionUserId && <button className=\"songbuttons\" onClick={closeMenu}> <OpenModalMenuItem itemText=\"Add Song to Playlist\" onItemClick={closeMenu} modalComponent={<AddSongToPlaylistModal song = {song}/>}/> </button>}\n      {sessionUserId && <button className=\"songbuttons\" onClick={closeMenu}> <OpenModalMenuItem itemText=\"Remove Song from Album\" onItemClick={closeMenu} modalComponent={<RemoveSongFromAlbumModal song = {song}/>}/> </button>}\n      {sessionUserId && <button className=\"songbuttons\" onClick={closeMenu}> <OpenModalMenuItem itemText=\"Remove Song from Playlist\" onItemClick={closeMenu} modalComponent={<RemoveSongFromPlaylistModal song = {song}/>}/> </button>}\n      {/* {sessionUserId && hasAlbums && <button> <OpenModalMenuItem itemText=\"Remove Song from Album\" onItemClick={closeMenu} modalComponent={<RemoveSongFromAlbumModal song = {song}/>}/> </button>}\n      {sessionUserId && hasPlaylists && <button> <OpenModalMenuItem itemText=\"Remove Song from Playlist\" onItemClick={closeMenu} modalComponent={<RemoveSongFromPlaylistModal song = {song}/>}/> </button>} */}\n      </div>\n      </div>\n    </>\n  )\n};\n\nexport default SongDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllAlbums } from '../../store/albums';\nimport AlbumIndexItem from '../AlbumIndexItem';\nimport \"./albums.css\";\nimport MenuLibrary from '../MenuLibrary';\n\nfunction Albums({num}) {\n    const dispatch = useDispatch();\n    const [isLoaded, setIsLoaded] = useState(false);\n    const albums = useSelector((state) => state.albumsReducer);\n    // console.log(\"this is albums:\", albums)\n    useEffect(()=>{\n      dispatch(getAllAlbums()).then(()=>setIsLoaded(true))\n    }, [dispatch]);\n\n  if (!isLoaded) {\n    return (<div>Loading...</div>);\n  }\n\n  if(isLoaded){\n  return (\n    <div className='albumwrapper'>\n      {num !== 4 && <div className='albumitem-1'>\n         <MenuLibrary />\n      </div>}\n      <div className='albumitem-2'>\n        { num !== 4 && <h2>{\" \"} All Albums:</h2>}\n        <ul className=\"viewalbums\">\n              { num !== 4 && Object.values(albums).map((album, index) => (\n                    <AlbumIndexItem album={album} key={index}/>\n              ))}\n              { num === 4 && Object.values(albums).slice(0,4).map((album, index) => (\n                <AlbumIndexItem album={album} key={index}/>\n              ))}\n        </ul>\n      </div>\n    </div>\n  );}\n}\n\nexport default Albums;\n","import './DeleteAlbum.css';\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { deleteAlbum } from '../../store/albums';\nimport { useHistory } from 'react-router-dom';\n\nconst DeleteAlbumModal = ({album}) => {\n    const albumId = album.id;\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const {closeModal} = useModal();\n    const history = useHistory();\n\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        try {\n            await dispatch(deleteAlbum(albumId));\n            closeModal();\n            await history.push('/albums');\n        } catch (error) {\n            console.error('Error deleting album:', error);\n\n            try {\n                const data = await error.json();\n                if (data && data.errors) {\n                    setErrors(data.errors);\n                }\n            } catch (jsonError) {\n                console.error('Error parsing JSON:', jsonError);\n            }\n        }\n    };\n    return (\n        <div>\n            <p className='heading'>Confirm Delete</p>\n            <p className='subheading'>Are you sure you want to remove this album?</p>\n            <button className='deleteAlbumYes' onClick={handleDelete}>Yes - Delete Album</button><br/>\n            <button className='deleteAlbumNo' onClick={closeModal}>No - Keep Album</button>\n        </div>\n    );\n}\n\nexport default DeleteAlbumModal;\n","import './AlbumDetails.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlbumDetails } from '../../store/albums';\nimport DeleteAlbumModal from '../DeleteAlbumModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport MenuLibrary from '../MenuLibrary';\nimport { fetchAllArtists } from '../../store/artists';\n\nconst AlbumDetails = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { albumId } = useParams();\n  // console.log(\"This is albumId:\", albumId)\n  const sessionUser = useSelector(state => state.session.user);\n  const album = useSelector(state => state.albumsReducer[albumId]);\n  const artists = useSelector(state => state.artistsReducer);\n  // console.log(\"this is album:\", album)\n  // console.log(\"this is artists:\", artists, Object.values(Object.values(artists)[0]).filter((artist=>(artist.id==6)))[0].name)\n  const [isLoading, setIsLoading] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n\n  useEffect(() => {\n    dispatch(fetchAllArtists()).then(()=>{dispatch(getAlbumDetails(albumId))}).then(() => setIsLoading(false));\n  }, [dispatch, albumId]);\n  if (isLoading || !album || !artists) return (<>Loading...</>);\n  const { user_id, title, url, release_date, copyright } = album;\n\n  const closeMenu = (e) => {\n    if (!ulRef.current?.contains(e.target)) {\n      setShowMenu(false);\n    }\n  };\n  const handleEditClick = () => {\n    // Navigate to the edit page for the current playlist\n    history.push(`/albums/${albumId}/edit`);\n  };\n\n  const ownsAlbum = sessionUser && sessionUser.id === user_id;\n\n  const convertDuration = (totalSec) => {\n    const min = Math.floor(totalSec / 60);\n    let sec = totalSec % 60;\n    if(sec<10 && sec>=0){\n      sec=\"0\"+sec\n    }\n    const newStr = `${min}:${sec}`;\n    return newStr;\n  };\n\n  const getArtistName = (album, artists) =>{\n    const arr = [];\n    album.songs.forEach((song) => {\n      arr.push(Object.values((Object.values(artists)[0])).filter(((artist)=>(artist.id==song.artist_id)))[0].name);\n    })\n    return arr;\n  };\n\n  return (\n    <>\n      <div className='albumDetailwrapper'>\n        <div className='albumDetailitem-1'>\n          <MenuLibrary />\n        </div>\n        <div className='albumDetailitem-2'>\n          <p className='title'>Title: {title}</p>\n          <img id =\"albumdetialimage\" src={url} alt=\"albumdetailimage\"/>\n          <p className='release_date'>Release Date: {release_date}</p>\n          {copyright !== null && (\n            <p className='copyright'>{copyright}</p>\n          )}\n          {album.songs && album.songs.length > 0 && (\n            <div>\n              <p className='songs'>Songs:</p>\n              <ul>\n                <div key={album.songs.id+\"grid\"} className='songgrid'>\n                <div key={album.songs.id+\"index\"} className='songgridindex'>#{\" \"}Title</div>\n                <div key={album.songs.id+\"artist\"} className='songgridartist'>Artist</div>\n                <div key={album.songs.id+\"update\"} className='songgridupdate'>Song Modified</div>\n                <div key={album.songs.id+\"clock\"} className='songgridclock'><i id=\"faregularfaclock\" className=\"fa-regular fa-clock\"></i></div>\n                </div>\n\n                {album.songs.map((song, index) => (\n                  <div key={index+\"gridone\"} className='songgridone'>\n                  <div key={index+\"indexone\"} className='songgridindexone'>{index+1}{\". \"}<Link id=\"songlinkwithtext\" to={`/songs/${song.id}`}  key={`${song.id}`}><img id=\"playlistsongimage\" src={song.url}></img>{song.title}</Link></div>\n                  <div key={index+\"artistone\"} className='songgridartistone'>{getArtistName(album, artists)[index]}</div>\n                  <div key={index+\"updateone\"} className='songgridupdateone'>{song.updated_at.slice(7,12)}{song.updated_at.slice(4,7)},{song.updated_at.slice(11,16)}</div>\n                  <div key={index+\"clockone\"} className='songgridclockone'>{convertDuration(song.duration)}</div>\n                  </div>\n                ))}\n              </ul>\n            </div>\n          )}\n          {ownsAlbum && (\n            <button>\n              <OpenModalMenuItem\n                itemText=\"Delete\"\n                onItemClick={closeMenu}\n                modalComponent={<DeleteAlbumModal album={album} />}\n              />\n            </button>\n          )}\n          {ownsAlbum && (\n            <button onClick={handleEditClick}>Edit</button>\n          )}\n        </div>\n      </div>\n    </>\n  )\n};\n\nexport default AlbumDetails;\n","import './AlbumForm.css';\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createAlbum, updateAlbum } from '../../store/albums';\nimport MenuLibrary from '../MenuLibrary';\n\nconst AlbumForm = ({ album, formType }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const sessionUser = useSelector(state => state.session.user);\n  // const albumId = album?.id;\n  const albumuserId = album?.user_id;\n  let [title, setTitle] = useState(album?.title ||'');\n  let [url, setUrl] = useState(album?.url || '');\n  let [release_date, setReleaseDate] = useState(album?.release_date|| '');\n  let [copyright, setCopyright] = useState(album?.copyright || '');\n  let [validationErrors, setValidationErrors] = useState({});\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n\n  const formTitle = formType === 'Create Album' ? 'Create a New Album' : 'Update Your Album';\n\n  useEffect(() => {\n    const errors = { title: [], url: [], release_date: [],copyright:[] };\n    if (!title.length) errors[\"title\"].push(\"Title is required\");\n    if (!url.length) errors[\"url\"].push(\"URL is required\");\n    if (!release_date.length) errors[\"release_date\"].push(\"Release date is required\");\n    if (!copyright.length) errors[\"copyright\"].push(\"Copyright is required\");\n    setValidationErrors(errors);\n  }, [title, url, release_date, copyright]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setHasSubmitted(true);\n\n    album = { ...album, title, release_date, url, copyright };\n    let newAlbum;\n    let errorCount = validationErrors.title.length + validationErrors.release_date.length\n    + validationErrors.url.length + validationErrors.copyright.length;\n    if (errorCount > 0){\n      // console.log(\"has errors\");\n    }else{\n        if (formType === 'Update Album') {\n          if(sessionUser && albumuserId !== sessionUser.id){\n            history.push(`/`);\n            return;\n          }\n          newAlbum = await dispatch(updateAlbum(album));\n        } else if (formType === 'Create Album') {\n          newAlbum = await dispatch(createAlbum(album));\n        }\n        if (newAlbum.id) {\n          // console.log(\"newAlbum.id\", newAlbum.id);\n          history.push(`/albums/${newAlbum.id}`);\n        } else {\n            const { validationErrors } = await newAlbum.json();\n            setValidationErrors(validationErrors);\n        }\n      }\n    }\n\n    // const titleError = errors.title ? 'Title: ' + errors.title : null;\n    // const urlError = errors.url ? 'URL: ' + errors.url : null;\n    // const durationError = errors.duration ? 'Duration: ' + errors.duration : null;\n    // const releaseDateError = errors.release_date ? 'Release Date: ' + errors.release_date : null;\n    // const copyrightError = errors.copyright ? 'Copyright: ' + errors.copyright : null;\n\n    return (\n      <div className='albumformwrapper'>\n      <div className=\"albumform-1\">\n        <MenuLibrary />\n      </div>\n      <div className=\"albumform-2\">\n        <form className='form' onSubmit={handleSubmit}>\n          <p className='formHeading'>{formTitle}</p>\n\n          <p className='formSubheading'>Want to share your album?</p>\n          <p className='nomal'>Some details about your album.</p>\n          <div className='formNormal'>\n            <label>\n              Album Title<br />\n              <input type=\"text\" value={title} placeholder=\"Album Title\" onChange={(e) => setTitle(e.target.value)} /><br />\n              {hasSubmitted && validationErrors.title.length > 0\n                            && validationErrors.title.map((error, idx) => (\n                              <div key={idx}>\n                                <p className=\"error\">{error}</p>\n                            </div>\n                            ))}\n            </label>\n            <label>\n              Album Image URL<br />\n              <input type=\"text\" value={url} placeholder=\"Album Image URL\" onChange={(e) => setUrl(e.target.value)} /><br />\n              {hasSubmitted && validationErrors.url.length > 0\n                            && validationErrors.url.map((error, idx) => (\n                              <div key={idx}>\n                                <p className=\"error\">{error}</p>\n                            </div>\n                            ))}\n            </label>\n            <label>\n              Release Date<br />\n              <input type=\"text\" value={release_date} placeholder=\"Release Date\" onChange={(e) => setReleaseDate(e.target.value)} /><br />\n              {hasSubmitted && validationErrors.release_date.length > 0\n                            && validationErrors.release_date.map((error, idx) => (\n                              <div key={idx}>\n                                <p className=\"error\">{error}</p>\n                            </div>\n                            ))}\n            </label>\n            <label>\n              Copyright<br />\n              <input type=\"text\" value={copyright} placeholder=\"Copyright\" onChange={(e) => setCopyright(e.target.value)} /><br />\n              {hasSubmitted && validationErrors.copyright.length > 0\n                            && validationErrors.copyright.map((error, idx) => (\n                              <div key={idx}>\n                                <p className=\"error\">{error}</p>\n                            </div>\n                            ))}\n            </label>\n          </div>\n          <button className='submitFormButton' type=\"submit\">{formType}</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n  export default AlbumForm;\n","import AlbumForm from '../AlbumForm';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlbumDetails } from '../../store/albums';\n\nconst UpdateAlbum = () => {\n  const dispatch = useDispatch();\n  const { albumId } = useParams();\n  const album = useSelector(state => state.albumsReducer[albumId]);\n  useEffect(() => {\n    dispatch(getAlbumDetails(albumId));\n  }, [dispatch, albumId]);\n  if (!album) return(<></>);\n  return (\n    Object.keys(album).length > 1 && (\n      <>\n        <AlbumForm album={album} formType=\"Update Album\"/>\n      </>\n    )\n  );\n};\n\nexport default UpdateAlbum;\n","import AlbumForm from '../AlbumForm/index';\nimport React  from 'react';\nconst CreateAlbum = () => {\n  const album = {\n    title: '',\n    url: '',\n    release_date: '',\n    copyright: '',\n  };\n  return (\n    <AlbumForm album={album} formType=\"Create Album\"/>\n  );\n};\n\nexport default CreateAlbum;\n","import './PlaylistIndex.css';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllPlaylists } from '../../store/playlists';\nimport PlaylistIndexItem from '../PlaylistIndexItem/index';\nimport MenuLibrary from '../MenuLibrary';\n\nconst PlaylistIndex = ({num}) => {\n  const dispatch = useDispatch();\n  const playlists = useSelector(state => state.playlistsReducer.playlists);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    dispatch(fetchAllPlaylists()).then(() => setIsLoading(false));\n  }, [dispatch]);\n  if (isLoading) return (<>Loading...</>);\n  return (\n    <div className='playlistIndexwrapper'>\n      {num !== 4 && <div className='playlistIndexitem-1'>\n         <MenuLibrary />\n      </div>}\n      <div className='playlistIndexitem-2'>\n        { num !== 4 && <h2>{\" \"} All Playlists:</h2>}\n        <ul className='landingPlaylistIndex'>\n          {num !== 4 && playlists.map((playlist, index) => (\n            <PlaylistIndexItem playlist={playlist} key={index}/>\n          ))}\n          {num === 4 && playlists.slice(0,4).map((playlist, index) => (\n            <PlaylistIndexItem playlist={playlist} key={index}/>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PlaylistIndex;\n","import './PlaylistDetails.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPlaylistById } from '../../store/playlists';\nimport DeletePlaylistModal from '../DeletePlaylistModal';\nimport OpenModalMenuItem from '../Navigation/OpenModalMenuItem';\nimport MenuLibrary from '../MenuLibrary';\nimport { fetchAllArtists } from '../../store/artists';\n\n\nconst PlaylistDetails = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { playlistId } = useParams();\n  const sessionUser = useSelector(state => state.session.user);\n  const playlist = useSelector(state => state.playlistsReducer.currentPlaylist);\n  const artists = useSelector(state => state.artistsReducer);\n  const [isLoading, setIsLoading] = useState(true);\n  // const [showMenu, setShowMenu] = useState(false);\n  // const ulRef = useRef();\n\n  useEffect(() => {\n    dispatch(fetchAllArtists()).then(()=>{dispatch(fetchPlaylistById(playlistId))}).then(() => setIsLoading(false));\n  }, [dispatch, playlistId]);\n\n  // const closeMenu = (e) => {\n  //   if (!ulRef.current?.contains(e.target)) {\n  //     setShowMenu(false);\n  //   }\n  // };\n  const handleEditClick = () => {\n    // Navigate to the edit page for the current playlist\n    history.push(`/playlists/${playlistId}/edit`);\n  };\n\n  if (isLoading || !playlist || !artists) return <>Loading...</>;\n\n  const { user_id, title, url, description } = playlist;\n\n  const ownsPlaylist = sessionUser && sessionUser.id === user_id;\n\n  const convertDuration = (totalSec) => {\n    const min = Math.floor(totalSec / 60);\n    let sec = totalSec % 60;\n    if(sec<10 && sec>=0){\n      sec=\"0\"+sec\n    }\n    const newStr = `${min}:${sec}`;\n    return newStr;\n  };\n\n  const getArtistName = (playlist, artists) =>{\n    const arr = []\n    playlist.songs.forEach((song) => {\n      arr.push(Object.values((Object.values(artists)[0])).filter(((artist)=>(artist.id==song.artist_id)))[0].name);\n    })\n    return arr;\n  };\n\n  return (\n    <>\n    <div className='playlistDetailwrapper'>\n      <div className='playlistDetailitem-1'>\n         <MenuLibrary />\n      </div>\n      <div className='playlistDetailitem-2'>\n        <p className='title'>Title: {title}</p>\n        <img id =\"playlistdetailimage\" src={url} alt=\"playlistdetailimage\"/>\n        {description !== null && (\n          <p className='description'>Description: {description}</p>\n        )}\n\n        {playlist.songs && playlist.songs.length > 0 && (\n          <div>\n            <p className='songs'>Songs:</p>\n            <ul>\n              <div key={playlist.songs.id+\"o\"} className='songgrid'>\n              <div key={playlist.songs.id+\"t\"} className='songgridindex'>#{\" \"}Title</div>\n              <div key={playlist.songs.id+\"th\"} className='songgridartist'>Artist</div>\n              <div key={playlist.songs.id+\"f\"} className='songgridupdate'>Song Modified</div>\n              <div key={playlist.songs.id+\"fi\"} className='songgridclock'><i id=\"faregularfaclock\" className=\"fa-regular fa-clock\"></i></div>\n              </div>\n\n              {playlist.songs.map((song, index) => (\n                <div key={index+\"one\"} className='songgridone'>\n                <div key={index+\"two\"} className='songgridindexone'>{index+1}{\". \"}<Link id=\"songlinkwithtext\" to={`/songs/${song.id}`}  key={`${song.id}`}><img id=\"playlistsongimage\" src={song.url}></img>{song.title}</Link></div>\n                <div key={index+\"three\"} className='songgridartistone'>{getArtistName(playlist, artists)[index]}</div>\n                <div key={index+\"four\"} className='songgridupdateone'>{song.updated_at.slice(7,12)}{song.updated_at.slice(4,7)},{song.updated_at.slice(11,16)}</div>\n                <div key={index+\"five\"} className='songgridclockone'>{convertDuration(song.duration)}</div>\n                </div>\n              ))}\n            </ul>\n          </div>\n        )}\n\n      {/* {ownsPlaylist && (\n        <button>\n          <OpenModalMenuItem\n            itemText=\"Delete\"\n            onItemClick={closeMenu}\n            modalComponent={<DeletePlaylistModal playlist={playlist} />}\n          />\n        </button>\n      )} */}\n      {ownsPlaylist &&(\n      <button onClick={handleEditClick}>Edit</button>\n      )}\n      </div>\n      </div>\n    </>\n  );\n};\n\nexport default PlaylistDetails;\n","import React  from 'react';\nimport './MainPageContent.css';\nimport SongIndex from '../../components/SongIndex';\nimport Albums from '../Albums';\nimport PlaylistIndex from '../PlaylistIndex';\n\nfunction MainPageContent(){\n    const num = 4;\n\treturn (\n        <nav>\n            <div id=\"MainPageContentCss\">\n                <div>\n                <p>Spotify Songs</p>\n                <ul className='MainPageFourSong'>\n                        <SongIndex num={num}/>\n                </ul>\n                </div>\n                <div>\n                    <p>Spotify Albums</p>\n                    <ul className='MainPageFourAlbum'>\n                        <Albums num={num}/>\n                    </ul>\n                </div>\n                <div>\n                    <p>Spotify Playlists</p>\n                    <ul className='MainPageFourPlaylist'>\n                            <PlaylistIndex num={num}/>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n\t);\n}\n\nexport default MainPageContent;\n","import React from 'react';\nimport './Home.css';\nimport MenuLibrary from '../MenuLibrary';\nimport MainPageContent from '../MainPageContent';\n\nfunction Home(){\n\n\treturn (\n\t\t<nav>\n\t\t\t<div className=\"homewrapper\">\n                <div className=\"homeitem-1\">\n                    <MenuLibrary />\n                </div>\n                <div className=\"homeitem-2\">\n                    <MainPageContent />\n                </div>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n\nexport default Home;\n","import './PlaylistForm.css';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createNewPlaylist, updatePlaylist } from '../../store/playlists';\nimport MenuLibrary from '../MenuLibrary';\n\nconst PlaylistForm = ({ playlist, formType }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState(playlist?.title || '');\n  const [url, setUrl] = useState(playlist?.url);\n  const [description, setDescription] = useState(playlist?.description);\n  const [errors, setErrors] = useState({});\n  const formTitle = formType === 'Create Playlist' ? 'Create a New Playlist' : 'Update Your Playlist';\n\n  const isValidUrl = (value) => {\n    try {\n      new URL(value);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!title || title.trim() === '') {\n      newErrors.title = 'Title is required';\n    }\n    if (!isValidUrl(url)) {\n      newErrors.url = 'Invalid URL format';\n    }\n\n    setErrors(newErrors);\n\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors({});\n    const isFormValid = validateForm();\n    playlist = { ...playlist, title, url, description };\n\n    if (isFormValid) {\n      try {\n        let newPlaylist;\n\n        if (formType === 'Update Playlist') {\n          newPlaylist = await dispatch(updatePlaylist(playlist));\n        } else if (formType === 'Create Playlist') {\n          const res = await dispatch(createNewPlaylist(playlist));\n\n          if (!res.ok) {\n            // Handle non-OK response\n            console.error(\"Server response is not OK:\", res);\n            return;\n          }\n\n          // Parse the response\n          const contentType = res.headers.get(\"content-type\");\n          if (contentType && contentType.includes(\"application/json\")) {\n            const data = await res.json();\n            newPlaylist = data.playlist;\n          } else {\n            // Handle non-JSON response\n            console.error(\"Server response is not in JSON format\");\n            return;\n          }\n        }\n\n        // Redirect to the \"/playlists\" page\n        history.push('/playlists/');\n      } catch (error) {\n        // Handle general error\n        console.error(\"Error:\", error);\n        history.push('/playlists/');\n\n        if (error instanceof TypeError) {\n          // Handle specific error when res.json is not a function\n          console.error(\"Error: res.json is not a function\");\n          // Additional error handling if needed\n        }\n      }finally {\n        history.push(`/playlists`);\n      }\n    }\n  };\n  const titleError = errors.title ? 'Title: ' + errors.title : null;\n  const urlError = errors.url ? 'URL: ' + errors.url : null;\n  return (\n    <div className='playlistformwrapper'>\n      <div className=\"playlistformitem-1\">\n        <MenuLibrary />\n      </div>\n      <div className=\"playlistformitem-2\">\n        <form className='form' onSubmit={handleSubmit}>\n          <p className='formHeading'>{formTitle}</p>\n          <div className='errors'>\n            <ul>{titleError}</ul>\n            <ul>{urlError}</ul>\n            </div>\n          <p className='formSubheading'>Want to share your playlist?</p>\n          <p className='nomal'>Some details about your playlist.</p>\n          <div className='formNormal'>\n            <label>\n              Playlist Title<br />\n              <input type=\"text\" value={title} placeholder=\"Playlist Title\" onChange={(e) => setTitle(e.target.value)} /><br />\n            </label>\n            <label>\n              Playlist Image URL<br />\n              <input type=\"text\" value={url} placeholder=\"Playlist Image URL\" onChange={(e) => setUrl(e.target.value)} /><br />\n            </label>\n            <label>\n              Playlist Description(Optional)<br />\n              <input type=\"text\" value={description} placeholder=\"Playlist Description\" onChange={(e) => setDescription(e.target.value)} />\n            </label>\n          </div>\n          <button className='submitFormButton' type=\"submit\">{formType}</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PlaylistForm;\n","import PlaylistForm from '../PlaylistForm/index';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPlaylistById} from '../../store/playlists';\n\nconst UpdatePlaylist = () => {\n  const dispatch = useDispatch();\n  const { playlistId } = useParams();\n  const playlist = useSelector((state) => state.playlistsReducer?.currentPlaylist);\n\n  useEffect(() => {\n    dispatch(fetchPlaylistById(playlistId));\n  }, [dispatch, playlistId]);\n\n  if (!playlist) return <>loading ////</>;\n\n  return (\n    Object.keys(playlist).length > 1 && (\n      <>\n        <PlaylistForm playlist={playlist} formType=\"Update Playlist\" />\n      </>\n    )\n  );\n};\n\n\nexport default UpdatePlaylist;\n","import PlaylistForm from '../PlaylistForm/index';\nimport React  from 'react';\nconst CreatePlaylist = () => {\n  const playlist = {\n    title: '',\n    url: '',\n    description: '',\n  };\n  return (\n    <PlaylistForm playlist={playlist} formType=\"Create Playlist\"/>\n  );\n};\n\nexport default CreatePlaylist;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n// import SignupFormPage from \"./components/SignupFormPage\";\n// import LoginFormPage from \"./components/LoginFormPage\";\nimport { authenticate } from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\nimport CreateSong from './components/CreateSong';\nimport UpdateSong from './components/UpdateSong';\nimport ManageSongs from './components/ManageSongs';\nimport ManageAlbums from './components/ManageAlbums';\nimport ManagePlaylists from './components/ManagePlaylists';\nimport SongIndex from './components/SongIndex';\nimport SongDetails from './components/SongDetails';\nimport Albums from \"./components/Albums\";\nimport AlbumDetails from \"./components/AlbumDetails\";\nimport UpdateAlbum from \"./components/UpdateAlbum\"\nimport CreateAlbum from \"./components/CreateAlbum\";\nimport PlaylistIndex from './components/PlaylistIndex';\nimport PlaylistDetails from './components/PlaylistDetails';\nimport Home from './components/Home';\nimport UpdatePlaylist from \"./components/UpdatePlaylist\";\nimport CreatePlaylist from \"./components/CreatePlaylist\";\n// import LikeSong from \"./components/LikeSong\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(authenticate()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/albums/current\" component={ManageAlbums}/>\n          <Route path=\"/albums\" exact={true}>\n            <Albums/>\n          </Route>\n          <Route path=\"/albums/:albumId(\\d+)\" exact={true}>\n            <AlbumDetails/>\n          </Route>\n          <Route path=\"/albums/:albumId/edit\" exact={true}>\n            <UpdateAlbum/>\n          </Route>\n          <Route exact path=\"/albums/new\" component={CreateAlbum}/>\n          <Route exact path=\"/albums/current\" component={ManageAlbums}/>\n          <Route exact path=\"/songs/current\" component={ManageSongs}/>\n          <Route exact path=\"/songs/new\" component={CreateSong}/>\n          <Route exact path=\"/songs/:songId(\\d+)/edit\" component={UpdateSong}/>\n          {/* <Route exact path=\"/songs/:songId(\\d+)/likes\" component={LikeSong}/> */}\n          <Route exact path=\"/songs/:songId(\\d+)\" component={SongDetails}/>\n          <Route exact path=\"/songs\" component={SongIndex}/>\n          <Route exact path=\"/playlists/current\" component={ManagePlaylists}/>\n          <Route exact path=\"/playlists/new\" component={CreatePlaylist}/>\n          <Route exact path=\"/playlists/:playlistId(\\d+)/edit\" component={UpdatePlaylist}/>\n          <Route exact path=\"/playlists/:playlistId(\\d+)\" component={PlaylistDetails}/>\n          <Route exact path=\"/playlists\" component={PlaylistIndex}/>\n          {/* <Route path=\"/login\" ><LoginFormPage /></Route>\n          <Route path=\"/signup\"><SignupFormPage /></Route> */}\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { ModalProvider, Modal } from \"./context/Modal\";\nimport configureStore from \"./store\";\nimport * as sessionActions from \"./store/session\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n\twindow.store = store;\n\twindow.sessionActions = sessionActions;\n}\n\n// Wrap the application with the Modal provider and render the Modal component\n// after the App component so that all the Modal content will be layered as\n// HTML elements on top of the all the other HTML elements:\nfunction Root() {\n\treturn (\n\t\t<ModalProvider>\n\t\t\t<Provider store={store}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<App />\n\t\t\t\t\t<Modal />\n\t\t\t\t</BrowserRouter>\n\t\t\t</Provider>\n\t\t</ModalProvider>\n\t);\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Root />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}